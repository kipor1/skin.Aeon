<includes>
  <include name="ShowcaseInfoAutoUp">
    <onup>7000</onup>
  </include>
  <include name="ShowcaseInfoTriggerUp">
    <onup>70110</onup>
  </include>
  <include name="ShowcaseOnDownTrailer">
    <ondown>PlayMedia($INFO[ListItem.Trailer],1)</ondown>
  </include>
  <include name="ShowcaseOnDown">
    <ondown>60</ondown>
  </include>
  <include name="ShowcasePlotWidth">
    <width>428</width>
  </include>
  <include name="ShowcaseNoPlotWidth">
    <width>300</width>
  </include>
  <include name="ShowcaseTVWidth">
    <width>570</width>
  </include>
  <include name="ShowcaseInfoLabel">
    <posx>0</posx>
    <posy>0</posy>
    <include condition="![Skin.HasSetting(showcasebigthumb) | Skin.HasSetting(showcasefanart) | Skin.HasSetting(showcasebigtrailer)] + !Skin.HasSetting(videotv)">ShowcasePlotWidth</include>
    <include condition="Skin.HasSetting(showcasebigthumb) | Skin.HasSetting(showcasefanart) | Skin.HasSetting(showcasebigtrailer) + !Skin.HasSetting(videotv)">ShowcaseNoPlotWidth</include>
    <include condition="Skin.HasSetting(videotv)">ShowcaseTVWidth</include>
    <height>20</height>
    <font>Font_MultiplexInfoLabel</font>
    <textcolor>abFFFFFF</textcolor>
  </include>
  <include name="ShowcaseInfoValue">
    <posx>0</posx>
    <posy>26</posy>
    <include condition="![Skin.HasSetting(showcasebigthumb) | Skin.HasSetting(showcasefanart) | Skin.HasSetting(showcasebigtrailer)] + !Skin.HasSetting(videotv)">ShowcasePlotWidth</include>
    <include condition="Skin.HasSetting(showcasebigthumb) | Skin.HasSetting(showcasefanart) | Skin.HasSetting(showcasebigtrailer) + !Skin.HasSetting(videotv)">ShowcaseNoPlotWidth</include>
    <include condition="Skin.HasSetting(videotv)">ShowcaseTVWidth</include>
    <height>20</height>
    <font>Font_MultiplexInfoValue</font>
    <textcolor>FFFFFFFF</textcolor>
  </include>
  <include name="ShowcaseInfoLabelBigThumb">
    <posx>352</posx>
    <posy>0</posy>
    <width>300</width>
    <height>20</height>
    <font>Font_MultiplexInfoLabel</font>
    <textcolor>abFFFFFF</textcolor>
  </include>
  <include name="ShowcaseInfoValueBigThumb">
    <posx>352</posx>
    <posy>26</posy>
    <width>300</width>
    <height>20</height>
    <font>Font_MultiplexInfoValue</font>
    <textcolor>FFFFFFFF</textcolor>
  </include>
  <include name="ShowcaseInfoPaneMovies">
    <control type="group">
      <posx>0</posx>
      <posy>39</posy>
      <width>1920</width>
      <height>572</height>
      <visible>Container.Content(movies) + Control.IsVisible(57) + !Control.HasFocus(70197) + [Control.IsVisible(70109) | Control.HasFocus(70110) | Skin.HasSetting(showcaseinfoon) | [ControlGroup(7000).HasFocus() + Skin.HasSetting(showcaseinfotrigger)]]</visible>
      <animation effect="fade" start="0" end="100" time="400" delay="3000" condition="!Skin.HasSetting(showcaseinfoon)">WindowOpen</animation>
      <animation effect="fade" end="0" time="200">WindowClose</animation>
      <animation effect="fade" start="0" end="100" time="400">VisibleChange</animation>
      <control type="image">
        <posx>112</posx>
        <width>1695</width>
        <height>885</height>
        <texture border="0,0,0,204">multiplex/multiplex_back.png</texture>
        <visible>!Skin.HasSetting(showcasethin)</visible>
        <include>Animation_CommonFade</include>
      </control>
      <control type="image">
        <posx>112</posx>
        <width>1695</width>
        <height>885</height>
        <texture border="0,0,0,204">multiplex/multiplex_tablet.png</texture>
        <visible>![Skin.HasSetting(showcasebigthumb) | Skin.HasSetting(showcasefanart) | Skin.HasSetting(showcasebigtrailer)]</visible>
      </control>
      <control type="image">
        <posx>112</posx>
        <width>1695</width>
        <height>885</height>
        <texture border="0,0,0,204">multiplex/multiplex_tablet_bigthumb.png</texture>
        <visible>Skin.HasSetting(showcasefanart) | Skin.HasSetting(showcasebigthumb) | Skin.HasSetting(showcasebigtrailer)</visible>
      </control>
      <control type="group">
        <posx>158</posx>
        <posy>39</posy>
        <control type="group">
          <posy>33</posy>
          <control type="label">
            <include>ShowcaseInfoLabel</include>
            <label>$LOCALIZE[31402]:</label>
          </control>
          <control type="label">
            <include>ShowcaseInfoValue</include>
            <label fallback="31425">$INFO[Container(57).ListItem.Director]</label>
          </control>
        </control>
        <control type="group">
          <posy>100</posy>
          <control type="label">
            <include>ShowcaseInfoLabel</include>
            <label>$LOCALIZE[31401]:</label>
          </control>
          <control type="label">
            <include>ShowcaseInfoValue</include>
            <label fallback="31425">$INFO[Container(57).ListItem.Writer]</label>
          </control>
        </control>
        <control type="group">
          <posy>168</posy>
          <control type="label">
            <include>ShowcaseInfoLabel</include>
            <label>$LOCALIZE[31436]:</label>
          </control>
          <control type="label">
            <include>ShowcaseInfoValue</include>
            <label fallback="31425">$INFO[Container(57).ListItem.Year]</label>
          </control>
        </control>
        <control type="group">
          <posy>236</posy>
          <visible>![Skin.HasSetting(showcasebigthumb) | Skin.HasSetting(showcasefanart) | Skin.HasSetting(showcasebigtrailer)]</visible>
          <control type="label">
            <include>ShowcaseInfoLabel</include>
            <label>$LOCALIZE[31709]:</label>
          </control>
          <control type="label">
            <include>ShowcaseInfoValue</include>
            <label fallback="31425">$INFO[Container(57).ListItem.Duration]</label>
          </control>
        </control>
        <control type="group">
          <posy>303</posy>
          <visible>![Skin.HasSetting(showcasebigthumb) | Skin.HasSetting(showcasefanart) | Skin.HasSetting(showcasebigtrailer)]</visible>
          <control type="label">
            <include>ShowcaseInfoLabel</include>
            <label>$LOCALIZE[31438]:</label>
          </control>
          <control type="label">
            <include>ShowcaseInfoValue</include>
            <label fallback="31425">$INFO[Container(57).ListItem.Genre]</label>
          </control>
        </control>
        <control type="group">
          <posy>370</posy>
          <visible>![Skin.HasSetting(showcasebigthumb) | Skin.HasSetting(showcasefanart) | Skin.HasSetting(showcasebigtrailer)]</visible>
          <control type="label">
            <include>ShowcaseInfoLabel</include>
            <label>$LOCALIZE[31417]:</label>
          </control>
          <control type="label">
            <include>ShowcaseInfoValue</include>
            <label fallback="31425">$INFO[Container(57).ListItem.MPAA]</label>
          </control>
        </control>
        <control type="group">
          <posy>438</posy>
          <visible>![Skin.HasSetting(showcasebigthumb) | Skin.HasSetting(showcasefanart) | Skin.HasSetting(showcasebigtrailer)]</visible>
          <control type="label">
            <include>ShowcaseInfoLabel</include>
            <label>$LOCALIZE[31408]:</label>
          </control>
          <control type="label">
            <include>ShowcaseInfoValue</include>
            <label fallback="31425">$INFO[Container(57).ListItem.RatingAndVotes]</label>
          </control>
        </control>
        <control type="group">
          <posy>33</posy>
          <visible>Skin.HasSetting(showcasefanart) | Skin.HasSetting(showcasebigthumb) | Skin.HasSetting(showcasebigtrailer)</visible>
          <control type="label">
            <include>ShowcaseInfoLabelBigThumb</include>
            <label>$LOCALIZE[31709]:</label>
          </control>
          <control type="label">
            <include>ShowcaseInfoValueBigThumb</include>
            <label fallback="31425">$INFO[Container(57).ListItem.Duration]</label>
          </control>
        </control>
        <control type="group">
          <posy>100</posy>
          <visible>Skin.HasSetting(showcasefanart) | Skin.HasSetting(showcasebigthumb) | Skin.HasSetting(showcasebigtrailer)</visible>
          <control type="label">
            <include>ShowcaseInfoLabelBigThumb</include>
            <label>$LOCALIZE[31417]:</label>
          </control>
          <control type="label">
            <include>ShowcaseInfoValueBigThumb</include>
            <label fallback="31425">$INFO[Container(57).ListItem.MPAA]</label>
          </control>
        </control>
        <control type="group">
          <posy>168</posy>
          <visible>Skin.HasSetting(showcasefanart) | Skin.HasSetting(showcasebigthumb) | Skin.HasSetting(showcasebigtrailer)</visible>
          <control type="label">
            <include>ShowcaseInfoLabelBigThumb</include>
            <label>$LOCALIZE[31408]:</label>
          </control>
          <control type="label">
            <include>ShowcaseInfoValueBigThumb</include>
            <label fallback="31425">$INFO[Container(57).ListItem.RatingAndVotes]</label>
          </control>
        </control>
      </control>
      <control type="group">
        <posx>594</posx>
        <posy>33</posy>
        <visible>false</visible>
        <control type="label">
          <width>458</width>
          <height>20</height>
          <font>Font_MultiplexInfoLabel</font>
          <textcolor>abFFFFFF</textcolor>
          <label>$LOCALIZE[31405]:</label>
        </control>
        <control type="textbox">
          <posy>26</posy>
          <width>736</width>
          <height>225</height>
          <font>Font_MultiplexInfoValue</font>
          <textcolor>FFFFFFFF</textcolor>
          <label>$INFO[ListItem.CastAndRole]</label>
        </control>
      </control>
      <control type="textbox">
        <posx>624</posx>
        <posy>66</posy>
        <width>682</width>
        <height>468</height>
        <font>Font_MultiplexPlot</font>
        <info>Container(57).ListItem.Plot</info>
        <textcolor>d0FFFFFF</textcolor>
        <autoscroll delay="15000" time="2000" repeat="10000">Skin.HasSetting(allowscroll)</autoscroll>
        <visible>![Skin.HasSetting(showcasefanart) | Skin.HasSetting(showcasebigthumb) | Skin.HasSetting(showcasebigtrailer) | Skin.HasSetting(showcasetrailer)]</visible>
      </control>
      <control type="textbox">
        <posx>1358</posx>
        <posy>66</posy>
        <width>394</width>
        <height>468</height>
        <font>Font_MultiplexPlot</font>
        <info>Container(57).ListItem.Plot</info>
        <textcolor>d0FFFFFF</textcolor>
        <autoscroll delay="15000" time="2000" repeat="10000">Skin.HasSetting(allowscroll)</autoscroll>
        <visible>Skin.HasSetting(showcasetrailer)</visible>
      </control>
      <control type="textbox">
        <posx>158</posx>
        <posy>297</posy>
        <width>652</width>
        <height>224</height>
        <font>Font_MultiplexPlotSmall</font>
        <info>Container(57).ListItem.Plot</info>
        <textcolor>d0FFFFFF</textcolor>
        <autoscroll delay="15000" time="2000" repeat="10000">Skin.HasSetting(allowscroll)</autoscroll>
        <visible>Skin.HasSetting(showcasefanart) | Skin.HasSetting(showcasebigthumb) | Skin.HasSetting(showcasebigtrailer)</visible>
      </control>
      <control type="group">
        <posx>1380</posx>
        <posy>68</posy>
        <visible>![Skin.HasSetting(showcasefanart) | Skin.HasSetting(showcasebigthumb) | Skin.HasSetting(showcasebigtrailer) | Skin.HasSetting(showcaseposter) | Skin.HasSetting(showcasetrailer)]</visible>
        <control type="image">
          <posx>0</posx>
          <posy>0</posy>
          <width>364</width>
          <height>225</height>
          <texture>common/black.png</texture>
          <colordiffuse>94FFFFFF</colordiffuse>
          <animation effect="fade" start="50" end="50" time="0" condition="!Skin.HasSetting(darkfloor)">Conditional</animation>
        </control>
        <control type="largeimage">
          <posx>1</posx>
          <posy>1</posy>
          <width>364</width>
          <height>225</height>
          <aspectratio>scale</aspectratio>
          <fadetime>400</fadetime>
          <texture>$INFO[Container(57).ListItem.Path,,extrathumbs/thumb1.jpg]</texture>
        </control>
        <control type="image">
          <posx>0</posx>
          <posy>232</posy>
          <width>364</width>
          <height>225</height>
          <texture>common/black.png</texture>
          <colordiffuse>94FFFFFF</colordiffuse>
          <animation effect="fade" start="50" end="50" time="0" condition="!Skin.HasSetting(darkfloor)">Conditional</animation>
        </control>
        <control type="largeimage">
          <posx>1</posx>
          <posy>234</posy>
          <width>364</width>
          <height>225</height>
          <aspectratio>scale</aspectratio>
          <fadetime>400</fadetime>
          <texture>$INFO[Container(57).ListItem.Path,,extrathumbs/thumb2.jpg]</texture>
        </control>
      </control>
      <!--New Poster Group-->
      <control type="group">
        <posx>1401</posx>
        <posy>75</posy>
        <visible>Skin.HasSetting(showcaseposter)</visible>
        <control type="image">
          <width>300</width>
          <height>450</height>
          <fadetime>200</fadetime>
          <texture background="true" diffuse="multiplex/multiplex_mask.png">defaultvideo.png</texture>
          <aspectratio scalediffuse="false">scretch</aspectratio>
          <info>ListItem.Icon</info>
        </control>
        <control type="image">
          <posx>-18</posx>
          <posy>-18</posy>
          <width>336</width>
          <height>486</height>
          <fadetime>200</fadetime>
          <bordertexture>multiplex/multiplex_border.png</bordertexture>
          <texture>common/blank.png</texture>
        </control>
        <control type="image">
          <posx>3</posx>
          <posy>-3</posy>
          <width>300</width>
          <height>450</height>
          <fadetime>200</fadetime>
          <texture>multiplex/multiplex_glass.png</texture>
          <aspectratio scalediffuse="false">stretch</aspectratio>
          <colordiffuse>66FFFFFF</colordiffuse>
        </control>
      </control>
      <!--End-->
      <control type="group">
        <posx>915</posx>
        <posy>75</posy>
        <visible>Skin.HasSetting(showcasebigthumb)</visible>
        <control type="image">
          <posx>0</posx>
          <posy>0</posy>
          <width>786</width>
          <height>442</height>
          <texture>common/black.png</texture>
          <colordiffuse>94FFFFFF</colordiffuse>
          <animation effect="fade" start="50" end="50" time="0" condition="!Skin.HasSetting(darkfloor)">Conditional</animation>
        </control>
        <control type="multiimage">
          <posx>1</posx>
          <posy>1</posy>
          <width>783</width>
          <height>440</height>
          <aspectratio>scale</aspectratio>
          <fadetime>400</fadetime>
          <timeperimage>4000</timeperimage>
          <imagepath background="true">$INFO[Container(57).ListItem.Path,,extrathumbs]</imagepath>
        </control>
      </control>
      <control type="group">
        <posx>624</posx>
        <posy>72</posy>
        <visible>Skin.HasSetting(showcasetrailer)</visible>
        <control type="image">
          <posx>0</posx>
          <posy>0</posy>
          <width>682</width>
          <height>384</height>
          <texture>common/black.png</texture>
          <colordiffuse>94FFFFFF</colordiffuse>
          <animation effect="fade" start="50" end="50" time="0" condition="!Skin.HasSetting(darkfloor)">Conditional</animation>
        </control>
        <control type="videowindow">
          <posx>1</posx>
          <posy>1</posy>
          <width>680</width>
          <height>381</height>
          <visible>[Control.IsVisible(57) + !Control.HasFocus(70197) + [Control.IsVisible(70109) | Control.HasFocus(70110) | Skin.HasSetting(showcaseinfoon) | [ControlGroup(7000).HasFocus() + Skin.HasSetting(showcaseinfotrigger)]]] | VideoPlayer.Content(movies) + !VideoPlayer.Content(music)</visible>
        </control>
        <control type="largeimage">
          <posx>1</posx>
          <posy>1</posy>
          <width>680</width>
          <height>381</height>
          <aspectratio>scale</aspectratio>
          <fadetime>400</fadetime>
          <texture>$INFO[Container(57).listitem.property(fanart_image)]</texture>
          <visible>!Player.HasVideo + !Skin.HasSetting(trailerthumbs)</visible>
        </control>
        <control type="multiimage">
          <posx>1</posx>
          <posy>1</posy>
          <width>680</width>
          <height>381</height>
          <aspectratio>scale</aspectratio>
          <fadetime>400</fadetime>
          <timeperimage>4000</timeperimage>
          <imagepath background="true">$INFO[Container(57).ListItem.Path,,extrathumbs]</imagepath>
          <visible>!Player.HasVideo + Skin.HasSetting(trailerthumbs)</visible>
        </control>
        <control type="image">
          <posx>158</posx>
          <posy>402</posy>
          <align>center</align>
          <width>360</width>
          <height>48</height>
          <texture>multiplex/multiplex_trailer_label.png</texture>
          <visible>!IsEmpty(ListItem.Trailer) + Control.IsVisible(57) + !Control.HasFocus(70197) + [Control.IsVisible(70109) | Control.HasFocus(70110) | Skin.HasSetting(showcaseinfoon) | [ControlGroup(7000).HasFocus() + Skin.HasSetting(showcaseinfotrigger)]]</visible>
          <animation effect="fade" start="100" end="0" time="400" delay="5000" condition="Player.HasVideo">Conditional</animation>
        </control>
        <control type="label">
          <posx>158</posx>
          <posy>408</posy>
          <align>center</align>
          <width>360</width>
          <height>48</height>
          <font>Font_MultiplexPlot</font>
          <label>Press DOWN to see trailer</label>
          <visible>!IsEmpty(ListItem.Trailer) + !Player.HasVideo + Control.IsVisible(57) + !Control.HasFocus(70197) + [Control.IsVisible(70109) | Control.HasFocus(70110) | Skin.HasSetting(showcaseinfoon) | [ControlGroup(7000).HasFocus() + Skin.HasSetting(showcaseinfotrigger)]]</visible>
          <colordiffuse>d0FFFFFF</colordiffuse>
          <animation effect="fade" start="0" end="100" time="400">VisibleChange</animation>
        </control>
        <control type="label">
          <posx>158</posx>
          <posy>408</posy>
          <align>center</align>
          <width>360</width>
          <height>48</height>
          <font>Font_MultiplexPlot</font>
          <label>Press 'X' to stop</label>
          <visible>!IsEmpty(ListItem.Trailer) + Player.HasVideo + Control.IsVisible(57) + !Control.HasFocus(70197) + [Control.IsVisible(70109) | Control.HasFocus(70110) | Skin.HasSetting(showcaseinfoon) | [ControlGroup(7000).HasFocus() + Skin.HasSetting(showcaseinfotrigger)]]</visible>
          <colordiffuse>d0FFFFFF</colordiffuse>
          <animation effect="fade" start="0" end="100" time="400">VisibleChange</animation>
          <animation effect="fade" start="100" end="0" time="400" delay="5000" condition="Player.HasVideo">Conditional</animation>
        </control>
      </control>
      <control type="group">
        <posx>915</posx>
        <posy>75</posy>
        <visible>Skin.HasSetting(showcasefanart) | Skin.HasSetting(showcasebigtrailer)</visible>
        <control type="image">
          <posx>0</posx>
          <posy>0</posy>
          <width>786</width>
          <height>442</height>
          <texture>common/black.png</texture>
          <colordiffuse>94FFFFFF</colordiffuse>
          <animation effect="fade" start="50" end="50" time="0" condition="!Skin.HasSetting(darkfloor)">Conditional</animation>
        </control>
        <control type="videowindow">
          <posx>1</posx>
          <posy>1</posy>
          <width>783</width>
          <height>440</height>
          <visible>[Control.IsVisible(57) + [Skin.HasSetting(showcasebigtrailer) | Skin.HasSetting(showcasefanart)] + !Control.HasFocus(70197) + [Control.IsVisible(70109) | Control.HasFocus(70110) | Skin.HasSetting(showcaseinfoon) | [ControlGroup(7000).HasFocus() + Skin.HasSetting(showcaseinfotrigger)]]] | VideoPlayer.Content(movies)</visible>
        </control>
        <control type="largeimage">
          <posx>1</posx>
          <posy>1</posy>
          <width>783</width>
          <height>440</height>
          <aspectratio>scale</aspectratio>
          <fadetime>400</fadetime>
          <texture>$INFO[Container(57).listitem.property(fanart_image)]</texture>
          <visible>!Player.HasVideo</visible>
        </control>
        <control type="multiimage">
          <posx>1</posx>
          <posy>1</posy>
          <width>783</width>
          <height>440</height>
          <aspectratio>scale</aspectratio>
          <fadetime>400</fadetime>
          <timeperimage>4000</timeperimage>
          <imagepath background="true">$INFO[Container(57).ListItem.Path,,extrathumbs]</imagepath>
          <visible>!Player.HasVideo + Skin.HasSetting(trailerthumbs) + Skin.HasSetting(multiplexbigtrailer)</visible>
        </control>
        <control type="image">
          <posx>210</posx>
          <posy>417</posy>
          <align>center</align>
          <width>360</width>
          <height>48</height>
          <texture>multiplex/multiplex_trailer_label.png</texture>
          <visible>!IsEmpty(ListItem.Trailer) + Skin.HasSetting(showcasebigtrailer) + Control.IsVisible(57) + !Control.HasFocus(70197) + [Control.IsVisible(70109) | Control.HasFocus(70110) | Skin.HasSetting(showcaseinfoon) | [ControlGroup(7000).HasFocus() + Skin.HasSetting(showcaseinfotrigger)]]</visible>
          <animation effect="fade" start="100" end="0" time="400" delay="5000" condition="Player.HasVideo">Conditional</animation>
        </control>
        <control type="label">
          <posx>210</posx>
          <posy>423</posy>
          <align>center</align>
          <width>360</width>
          <height>48</height>
          <font>Font_MultiplexPlot</font>
          <label>Press DOWN to see trailer</label>
          <visible>!IsEmpty(ListItem.Trailer) + Skin.HasSetting(showcasebigtrailer) + !Player.HasVideo + Control.IsVisible(57) + !Control.HasFocus(70197) + [Control.IsVisible(70109) | Control.HasFocus(70110) | Skin.HasSetting(showcaseinfoon) | [ControlGroup(7000).HasFocus() + Skin.HasSetting(showcaseinfotrigger)]]</visible>
          <colordiffuse>d0FFFFFF</colordiffuse>
          <animation effect="fade" start="0" end="100" time="400">VisibleChange</animation>
        </control>
        <control type="label">
          <posx>210</posx>
          <posy>423</posy>
          <align>center</align>
          <width>360</width>
          <height>48</height>
          <font>Font_MultiplexPlot</font>
          <label>Press 'X' to stop</label>
          <visible>!IsEmpty(ListItem.Trailer) + Skin.HasSetting(showcasebigtrailer) + Player.HasVideo + Control.IsVisible(57) + !Control.HasFocus(70197) + [Control.IsVisible(70109) | Control.HasFocus(70110) | Skin.HasSetting(showcaseinfoon) | [ControlGroup(7000).HasFocus() + Skin.HasSetting(showcaseinfotrigger)]]</visible>
          <colordiffuse>d0FFFFFF</colordiffuse>
          <animation effect="fade" start="0" end="100" time="400">VisibleChange</animation>
          <animation effect="fade" start="100" end="0" time="400" delay="5000" condition="Player.HasVideo">Conditional</animation>
        </control>
      </control>
    </control>
  </include>
  <include name="ShowcaseVisible">
    <visible>Control.IsVisible(57)</visible>
  </include>
  <include name="ShowcaseSpotNight">
    <texture>showcase/showcase_spot.png</texture>
  </include>
  <include name="ShowcaseSpotLight">
    <texture>showcase/lite/showcase_spot.png</texture>
  </include>
  <include name="MovieShowcaseGroupVars">
    <posx>-124</posx>
    <posy>570</posy>
    <width>2169</width>
    <height>525</height>
  </include>
  <include name="MusicShowcaseGroupVars">
    <posx>-368</posx>
    <posy>580</posy>
    <width>2655</width>
    <height>525</height>
  </include>
  <!-- Movie Showcase Variables: Main thumbs -->
  <!-- For extra includes see Includes_CDDVDMod.xml -->
  <include name="MovieShowcaseThumb">
    <include condition="!Skin.HasSetting(dvdcase)">MovieShowcaseThumbDimensions</include>
    <include condition="Skin.HasSetting(dvdcase)">MovieShowcaseThumbDimensionsDVDCover</include>
    <align>center</align>
    <include condition="!Skin.HasSetting(dvdcase)">MoviePosterMaskNormal</include>
    <include condition="Skin.HasSetting(dvdcase)">MoviePosterMaskDVD</include>
    <aspectratio scalediffuse="false">stretch</aspectratio>
    <visible>!Container.Content(genres) | Skin.HasSetting(moviegenre_onoff)</visible>
    <!-- <<<<<< Add this -->
  </include>
  <include name="MovieShowcaseThumbMain">
    <include condition="!Skin.HasSetting(dvdcase)">MovieShowcaseThumbDimensions</include>
    <include condition="Skin.HasSetting(dvdcase)">MovieShowcaseThumbDimensionsDVDCover</include>
    <align>center</align>
    <include condition="!Skin.HasSetting(dvdcase)">MoviePosterMaskNormal</include>
    <include condition="Skin.HasSetting(dvdcase)">MoviePosterMaskDVD</include>
    <aspectratio scalediffuse="false">stretch</aspectratio>
    <visible>!Container.Content(genres) | Skin.HasSetting(moviegenre_onoff)</visible>
    <!-- <<<<<< Add this -->
  </include>
  <include name="MovieShowcaseThumbReflectionMain">
    <include condition="!Skin.HasSetting(dvdcase)">MovieShowcaseThumbReflectionDimensions</include>
    <include condition="Skin.HasSetting(dvdcase)">MovieShowcaseThumbReflectionDimensionsDVDCover</include>
    <colordiffuse>52FFFFFF</colordiffuse>
    <include condition="!Skin.HasSetting(dvdcase)">MoviePosterMaskReflectionNormal</include>
    <include condition="Skin.HasSetting(dvdcase)">MoviePosterMaskReflectionDVD</include>
    <aspectratio scalediffuse="false">stretch</aspectratio>
    <visible>!Container.Content(genres) | Skin.HasSetting(moviegenre_onoff)</visible>
    <!-- <<<<<< Add this -->
  </include>
  <include name="MovieShowcaseThumbReflection">
    <include condition="!Skin.HasSetting(dvdcase)">MovieShowcaseThumbReflectionDimensions</include>
    <include condition="Skin.HasSetting(dvdcase)">MovieShowcaseThumbReflectionDimensionsDVDCover</include>
    <colordiffuse>d0FFFFFF</colordiffuse>
    <include condition="!Skin.HasSetting(dvdcase)">MoviePosterMaskReflectionNormal</include>
    <include condition="Skin.HasSetting(dvdcase)">MoviePosterMaskReflectionDVD</include>
    <aspectratio scalediffuse="false">stretch</aspectratio>
    <animation effect="fade" start="70" end="70" time="0" condition="Skin.HasSetting(darkfloor)">Conditional</animation>
    <visible>!Container.Content(genres) | Skin.HasSetting(moviegenre_onoff)</visible>
    <!-- <<<<<< Add this -->
  </include>
  <include name="MovieShowcaseThumbReflectionDVD">
    <include>MovieShowcaseThumbReflectionDimensionsDVD</include>
    <colordiffuse>d0FFFFFF</colordiffuse>
    <include>MoviePosterReflectionDVD</include>
    <aspectratio scalediffuse="false">stretch</aspectratio>
    <animation effect="fade" start="70" end="70" time="0" condition="Skin.HasSetting(darkfloor)">Conditional</animation>
    <visible>Skin.HasSetting(dvdcase)</visible>
  </include>
  <include name="MovieShowcaseThumbReflectionDVDMain">
    <include>MovieShowcaseThumbReflectionDimensionsDVD</include>
    <colordiffuse>52FFFFFF</colordiffuse>
    <include>MoviePosterReflectionDVD</include>
    <aspectratio scalediffuse="false">stretch</aspectratio>
    <visible>Skin.HasSetting(dvdcase)</visible>
  </include>
  <!-- Movie Showcase Variables: Thumb glass overlays -->
  <include name="MovieShowcaseGlassOverlay">
    <include condition="!Skin.HasSetting(dvdcase)">MovieShowcaseThumbDimensions</include>
    <include condition="Skin.HasSetting(dvdcase)">MovieShowcaseThumbDimensionsDVD</include>
    <include condition="!Skin.HasSetting(dvdcase)">MoviePosterNormal</include>
    <include condition="Skin.HasSetting(dvdcase)">MoviePosterDVD</include>
  </include>
  <include name="MovieShowcaseGlassOverlayAngled">
    <include condition="!Skin.HasSetting(dvdcase)">MovieShowcaseThumbDimensions</include>
    <include condition="Skin.HasSetting(dvdcase)">MovieShowcaseThumbDimensionsDVD</include>
    <include condition="!Skin.HasSetting(dvdcase)">MoviePosterNormalNoEdge</include>
    <include condition="Skin.HasSetting(dvdcase)">MoviePosterDVD</include>
  </include>
  <!-- Music Showcase Variables: Main thumbs -->
  <!-- For extra includes see Includes_CDDVDMod.xml -->
  <include name="MusicShowcaseThumbKeep">
    <aspectratio scalediffuse="false">keep</aspectratio>
  </include>
  <include name="MusicShowcaseThumbStretch">
    <aspectratio scalediffuse="false">stretch</aspectratio>
  </include>
  <include name="MusicShowcaseThumb">
    <include condition="!Skin.HasSetting(dvdcase)">MusicShowcaseThumbDimensions</include>
    <include condition="Skin.HasSetting(dvdcase)">MusicShowcaseThumbDimensionsCDCover</include>
    <include condition="!Skin.HasSetting(dvdcase)">MusicCoverMaskNormal</include>
    <include condition="Skin.HasSetting(dvdcase)">MusicCoverMaskCD</include>
    <include condition="Window.IsActive(2)">MusicShowcaseThumbKeep</include>
    <include condition="!Window.IsActive(2)">MusicShowcaseThumbStretch</include>
    <visible>!Container.Content(genres) | Skin.HasSetting(musicgenre_onoff)</visible>
    <!-- <<<<<< Add this -->
  </include>
  <include name="MusicShowcaseBlack">
    <control type="image">
      <include condition="!Skin.HasSetting(dvdcase)">MusicShowcaseThumbDimensions</include>
      <include condition="Skin.HasSetting(dvdcase)">MusicShowcaseThumbDimensionsCDCover</include>
      <include condition="!Skin.HasSetting(dvdcase)">MusicCoverMaskBlackNormal</include>
      <include condition="Skin.HasSetting(dvdcase)">MusicCoverMaskBlackCD</include>
    </control>
  </include>
  <include name="MusicShowcaseBlackReflection">
    <control type="image">
      <include condition="!Skin.HasSetting(dvdcase)">MusicShowcaseThumbDimensions</include>
      <include condition="Skin.HasSetting(dvdcase)">MusicShowcaseThumbDimensionsCDCover</include>
      <colordiffuse>d0FFFFFF</colordiffuse>
      <include condition="!Skin.HasSetting(dvdcase)">MusicCoverMaskReflectionBlackNormal</include>
      <include condition="Skin.HasSetting(dvdcase)">MusicCoverMaskReflectionBlackCD</include>
      <animation effect="fade" start="50" end="50" time="0" condition="Skin.HasSetting(darkfloor)">Conditional</animation>
    </control>
  </include>
  <include name="MusicShowcaseThumbMain">
    <include condition="!Skin.HasSetting(dvdcase)">MusicShowcaseThumbDimensions</include>
    <include condition="Skin.HasSetting(dvdcase)">MusicShowcaseThumbDimensionsCDCover</include>
    <include condition="!Skin.HasSetting(dvdcase)">MusicCoverMaskNormal</include>
    <include condition="Skin.HasSetting(dvdcase)">MusicCoverMaskCD</include>
    <include condition="Window.IsActive(2)">MusicShowcaseThumbKeep</include>
    <include condition="!Window.IsActive(2)">MusicShowcaseThumbStretch</include>
    <visible>!Container.Content(genres) | Skin.HasSetting(musicgenre_onoff)</visible>
    <!-- <<<<<< Add this -->
  </include>
  <include name="MusicShowcaseThumbReflection">
    <include condition="!Skin.HasSetting(dvdcase)">MusicShowcaseThumbReflectionDimensions</include>
    <include condition="Skin.HasSetting(dvdcase)">MusicShowcaseThumbReflectionDimensionsCDCover</include>
    <colordiffuse>d0FFFFFF</colordiffuse>
    <include condition="!Skin.HasSetting(dvdcase)">MusicCoverMaskReflectionNormal</include>
    <include condition="Skin.HasSetting(dvdcase)">MusicCoverMaskReflectionCD</include>
    <include condition="Window.IsActive(2)">MusicShowcaseThumbKeep</include>
    <include condition="!Window.IsActive(2)">MusicShowcaseThumbStretch</include>
    <animation effect="fade" start="50" end="50" time="0" condition="Skin.HasSetting(darkfloor)">Conditional</animation>
    <visible>!Container.Content(genres) | Skin.HasSetting(musicgenre_onoff)</visible>
    <!-- <<<<<< Add this -->
  </include>
  <include name="MusicShowcaseThumbReflectionMain">
    <include condition="!Skin.HasSetting(dvdcase)">MusicShowcaseThumbReflectionDimensions</include>
    <include condition="Skin.HasSetting(dvdcase)">MusicShowcaseThumbReflectionDimensionsCDCover</include>
    <colordiffuse>52FFFFFF</colordiffuse>
    <include condition="!Skin.HasSetting(dvdcase)">MusicCoverMaskReflectionNormal</include>
    <include condition="Skin.HasSetting(dvdcase)">MusicCoverMaskReflectionCD</include>
    <include condition="Window.IsActive(2)">MusicShowcaseThumbKeep</include>
    <include condition="!Window.IsActive(2)">MusicShowcaseThumbStretch</include>
    <animation effect="fade" start="50" end="50" time="0" condition="Skin.HasSetting(darkfloor)">Conditional</animation>
    <visible>!Container.Content(genres) | Skin.HasSetting(musicgenre_onoff)</visible>
    <!-- <<<<<< Add this -->
  </include>
  <include name="MusicShowcaseThumbReflectionCD">
    <include>MusicShowcaseThumbReflectionDimensionsCD</include>
    <colordiffuse>d0FFFFFF</colordiffuse>
    <include>MusicCoverReflectionCD</include>
    <include condition="Window.IsActive(2)">MusicShowcaseThumbKeep</include>
    <include condition="!Window.IsActive(2)">MusicShowcaseThumbStretch</include>
    <animation effect="fade" start="50" end="50" time="0" condition="Skin.HasSetting(darkfloor)">Conditional</animation>
    <visible>Skin.HasSetting(dvdcase)</visible>
  </include>
  <include name="MusicShowcaseThumbReflectionCDMain">
    <include>MusicShowcaseThumbReflectionDimensionsCD</include>
    <colordiffuse>52FFFFFF</colordiffuse>
    <include>MusicCoverReflectionCD</include>
    <include condition="Window.IsActive(2)">MusicShowcaseThumbKeep</include>
    <include condition="!Window.IsActive(2)">MusicShowcaseThumbStretch</include>
    <animation effect="fade" start="50" end="50" time="0" condition="Skin.HasSetting(darkfloor)">Conditional</animation>
    <visible>Skin.HasSetting(dvdcase)</visible>
  </include>
  <!-- Music Showcase Variables: Thumb glass overlays -->
  <include name="MusicShowcaseGlassOverlayAngled">
    <include condition="!Skin.HasSetting(dvdcase)">MusicShowcaseThumbDimensions</include>
    <include condition="Skin.HasSetting(dvdcase)">MusicShowcaseThumbDimensionsCD</include>
    <include condition="!Skin.HasSetting(dvdcase)">MusicCoverNormalNoEdge</include>
    <include condition="Skin.HasSetting(dvdcase)">MusicCoverCD</include>
  </include>
  <include name="MusicShowcaseGlassOverlayMain">
    <include condition="!Skin.HasSetting(dvdcase)">MusicShowcaseThumbDimensions</include>
    <include condition="Skin.HasSetting(dvdcase)">MusicShowcaseThumbDimensionsCD</include>
    <include condition="!Skin.HasSetting(dvdcase)">MusicCoverNormal</include>
    <include condition="Skin.HasSetting(dvdcase)">MusicCoverCD</include>
  </include>
  <include name="MusicShowcaseGlassOverlay">
    <include condition="!Skin.HasSetting(dvdcase)">MusicShowcaseThumbDimensions</include>
    <include condition="Skin.HasSetting(dvdcase)">MusicShowcaseThumbDimensionsCD</include>
    <include condition="!Skin.HasSetting(dvdcase)">MusicCoverNormal</include>
    <include condition="Skin.HasSetting(dvdcase)">MusicCoverCD</include>
  </include>
  <!-- Music Flow Variables: Icon labels -->
  <include name="MusicShowcaseOverlay">
    <include condition="!Skin.HasSetting(dvdcase)">MusicShowcaseThumbDimensions</include>
    <include condition="Skin.HasSetting(dvdcase)">MusicShowcaseThumbDimensionsCDCover</include>
    <colordiffuse>4e000000</colordiffuse>
    <texture>-</texture>
    <aspectratio scalediffuse="false">scale</aspectratio>
    <visible>![Control.HasFocus(57) | Control.HasFocus(71) | Control.HasFocus(85)]</visible>
    <include>Animation_CommonFade</include>
  </include>
  <include name="MovieShowcaseOverlay">
    <include condition="!Skin.HasSetting(dvdcase)">MusicShowcaseThumbDimensions</include>
    <include condition="Skin.HasSetting(dvdcase)">MusicShowcaseThumbDimensionsCDCover</include>
    <colordiffuse>4e000000</colordiffuse>
    <texture>-</texture>
    <aspectratio scalediffuse="false">scale</aspectratio>
    <animation effect="fade" end="100" time="200" condition="ControlGroup(7000).HasFocus">Conditional</animation>
    <animation effect="fade" start="0" end="0" time="0">WindowOpen</animation>
  </include>
  <!-- Common Flow labels -->
  <include name="ShowcaseLabelVars">
    <align>center</align>
    <aligny>center</aligny>
    <include>Animation_CommonFade</include>
    <include>Animation_HideShowcase</include>
    <visible>![Control.HasFocus(60) | Control.HasFocus(70197)]</visible>
  </include>
  <include name="ShowcaseMainLabel">
    <include>ShowcaseLabelVars</include>
    <posx>510</posx>
    <posy>1040</posy>
    <width>900</width>
    <font>Font_ShowcaseMainLabel</font>
    <include condition="!Skin.HasSetting(darkfloor)">Colour_ShowcaseLabelLightShade</include>
    <include condition="Skin.HasSetting(darkfloor)">Colour_ShowcaseLabelNightShade</include>
    <visible>!ControlGroup(7000).HasFocus()</visible>
    <animation effect="slide" end="0,-16" time="200" condition="[!Control.IsVisible(72) | IsEmpty(Control.GetLabel(72))] | Window.IsActive(24)">Conditional</animation>
  </include>
  <include name="ShowcaseMainLabelWide">
    <include>ShowcaseLabelVars</include>
    <posx>300</posx>
    <posy>1040</posy>
    <width>1320</width>
    <font>Font_ShowcaseMainLabel</font>
    <include condition="!Skin.HasSetting(darkfloor)">Colour_ShowcaseLabelLightShade</include>
    <include condition="Skin.HasSetting(darkfloor)">Colour_ShowcaseLabelNightShade</include>
    <visible>!ControlGroup(7000).HasFocus()</visible>
    <animation effect="slide" end="0,-16" time="200" condition="!Container.Content(seasons) + [!Control.IsVisible(72) | IsEmpty(Control.GetLabel(72))] | Window.IsActive(24)">Conditional</animation>
  </include>
  <include name="ShowcaseItemsLabel">
    <include>ShowcaseLabelVars</include>
    <posx>510</posx>
    <posy>1028</posy>
    <width>900</width>
    <font>Font_ShowcaseMainLabel</font>
    <include condition="!Skin.HasSetting(darkfloor)">Colour_ShowcaseLabelLightShade</include>
    <include condition="Skin.HasSetting(darkfloor)">Colour_ShowcaseLabelNightShade</include>
    <visible>ControlGroup(7000).HasFocus()</visible>
  </include>
  <include name="ShowcaseDetailLabel">
    <include>ShowcaseLabelVars</include>
    <posx>510</posx>
    <posy>1010</posy>
    <width>900</width>
    <font>Font_ShowcaseDetailLabel</font>
    <visible>!ControlGroup(7000).HasFocus()</visible>
    <include condition="!Skin.HasSetting(darkfloor)">Colour_ShowcaseLabelLightShade</include>
    <include condition="Skin.HasSetting(darkfloor)">Colour_ShowcaseLabelNightShade</include>
  </include>
  <control type="image" id="82">
    <texture>-</texture>
    <visible>Container(57).OnNext | Container(57).OnPrevious</visible>
    <animation effect="fade" time="4000">Hidden</animation>
  </control>
  <include name="ShowcaseSquare">
    <control type="group" id="7001">
      <posy>580</posy>
      <camera x="960" y="810" />
      <visible>Control.IsVisible(57) + Container.OnNext + ![Skin.HasSetting(flattenshowcase) | Container.Content(episodes)]</visible>
      <animation effect="slide" end="-150,0" time="250" reversible="false">Hidden</animation>
      <control type="group">
        <posx>75</posx>
        <visible>Container.OnNext</visible>
        <animation effect="fade" start="100" end="0" time="250" reversible="false">Hidden</animation>
        <animation effect="rotatey" center="-75" start="-65" end="-65" time="0" condition="true">Conditional</animation>
        <control type="group">
          <include condition="Window.IsActive(2)">MusicShowcaseBlack</include>
          <control type="image">
            <include>MusicShowcaseThumb</include>
            <info>Container(57).ListItem(-6).Thumb</info>
          </control>
          <include>genre_Showcase_1</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MusicShowcaseGlassOverlayAngled</include>
          </control>
          <include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>
          <control type="image">
            <include>MusicShowcaseThumbReflection</include>
            <info>Container(57).ListItem(-6).Thumb</info>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MusicShowcaseThumbReflectionCD</include>
          </control>
          <include>genre_Showcase_ref_1</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>225</posx>
        <animation effect="rotatey" center="75" start="-65" end="-65" time="0" condition="true">Conditional</animation>
        <control type="group">
          <include condition="Window.IsActive(2)">MusicShowcaseBlack</include>
          <control type="image">
            <include>MusicShowcaseThumb</include>
            <info>Container(57).ListItem(-5).Thumb</info>
          </control>
          <include>genre_Showcase_2</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MusicShowcaseGlassOverlayAngled</include>
          </control>
          <include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>
          <control type="image">
            <include>MusicShowcaseThumbReflection</include>
            <info>Container(57).ListItem(-5).Thumb</info>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MusicShowcaseThumbReflectionCD</include>
          </control>
          <include>genre_Showcase_ref_2</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>375</posx>
        <animation effect="rotatey" center="225" start="-65" end="-65" time="0" condition="true">Conditional</animation>
        <control type="group">
          <include condition="Window.IsActive(2)">MusicShowcaseBlack</include>
          <control type="image">
            <include>MusicShowcaseThumb</include>
            <info>Container(57).ListItem(-4).Thumb</info>
          </control>
          <include>genre_Showcase_3</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MusicShowcaseGlassOverlayAngled</include>
          </control>
          <include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>
          <control type="image">
            <include>MusicShowcaseThumbReflection</include>
            <info>Container(57).ListItem(-4).Thumb</info>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MusicShowcaseThumbReflectionCD</include>
          </control>
          <include>genre_Showcase_ref_3</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>525</posx>
        <animation effect="rotatey" center="375" start="-65" end="-65" time="0" condition="true">Conditional</animation>
        <control type="group">
          <include condition="Window.IsActive(2)">MusicShowcaseBlack</include>
          <control type="image">
            <include>MusicShowcaseThumb</include>
            <info>Container(57).ListItem(-3).Thumb</info>
          </control>
          <include>genre_Showcase_4</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MusicShowcaseGlassOverlayAngled</include>
          </control>
          <include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>
          <control type="image">
            <include>MusicShowcaseThumbReflection</include>
            <info>Container(57).ListItem(-3).Thumb</info>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MusicShowcaseThumbReflectionCD</include>
          </control>
          <include>genre_Showcase_ref_4</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>675</posx>
        <animation effect="rotatey" center="525" start="-65" end="-65" time="0" condition="true">Conditional</animation>
        <control type="group">
          <include condition="Window.IsActive(2)">MusicShowcaseBlack</include>
          <control type="image">
            <include>MusicShowcaseThumb</include>
            <info>Container(57).ListItem(-2).Thumb</info>
          </control>
          <include>genre_Showcase_5</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MusicShowcaseGlassOverlayAngled</include>
          </control>
          <include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>
          <control type="image">
            <include>MusicShowcaseThumbReflection</include>
            <info>Container(57).ListItem(-2).Thumb</info>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MusicShowcaseThumbReflectionCD</include>
          </control>
          <include>genre_Showcase_ref_5</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>1590</posx>
        <visible>!Container.OnNext</visible>
        <animation effect="fade" start="0" end="100" delay="0" time="250" reversible="false">Visible</animation>
        <animation effect="rotatey" center="2145" start="65" end="65" time="0" condition="true">Conditional</animation>
        <control type="group">
          <include condition="Window.IsActive(2)">MusicShowcaseBlack</include>
          <control type="image">
            <include>MusicShowcaseThumb</include>
            <info>Container(57).ListItem(5).Thumb</info>
          </control>
          <include>genre_Showcase_12</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MusicShowcaseGlassOverlayAngled</include>
          </control>
          <include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>
          <control type="image">
            <include>MusicShowcaseThumbReflection</include>
            <info>Container(57).ListItem(5).Thumb</info>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MusicShowcaseThumbReflectionCD</include>
          </control>
          <include>genre_Showcase_ref_12</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>1440</posx>
        <animation effect="rotatey" center="1995" start="65" end="65" time="0" condition="true">Conditional</animation>
        <control type="group">
          <include condition="Window.IsActive(2)">MusicShowcaseBlack</include>
          <control type="image">
            <include>MusicShowcaseThumb</include>
            <info>Container(57).ListItem(4).Thumb</info>
          </control>
          <include>genre_Showcase_11</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MusicShowcaseGlassOverlayAngled</include>
          </control>
          <include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>
          <control type="image">
            <include>MusicShowcaseThumbReflection</include>
            <info>Container(57).ListItem(4).Thumb</info>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MusicShowcaseThumbReflectionCD</include>
          </control>
          <include>genre_Showcase_ref_11</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>1290</posx>
        <animation effect="rotatey" center="1845" start="65" end="65" time="0" condition="true">Conditional</animation>
        <control type="group">
          <include condition="Window.IsActive(2)">MusicShowcaseBlack</include>
          <control type="image">
            <include>MusicShowcaseThumb</include>
            <info>Container(57).ListItem(3).Thumb</info>
          </control>
          <include>genre_Showcase_10</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MusicShowcaseGlassOverlayAngled</include>
          </control>
          <include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>
          <control type="image">
            <include>MusicShowcaseThumbReflection</include>
            <info>Container(57).ListItem(3).Thumb</info>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MusicShowcaseThumbReflectionCD</include>
          </control>
          <include>genre_Showcase_ref_10</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>1140</posx>
        <animation effect="rotatey" center="1695" start="65" end="65" time="0" condition="true">Conditional</animation>
        <control type="group">
          <include condition="Window.IsActive(2)">MusicShowcaseBlack</include>
          <control type="image">
            <include>MusicShowcaseThumb</include>
            <info>Container(57).ListItem(2).Thumb</info>
          </control>
          <include>genre_Showcase_9</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MusicShowcaseGlassOverlayAngled</include>
          </control>
          <include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>
          <control type="image">
            <include>MusicShowcaseThumbReflection</include>
            <info>Container(57).ListItem(2).Thumb</info>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MusicShowcaseThumbReflectionCD</include>
          </control>
          <include>genre_Showcase_ref_9</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>990</posx>
        <animation effect="rotatey" center="1545" start="65" end="65" time="0" condition="true">Conditional</animation>
        <control type="group">
          <include condition="Window.IsActive(2)">MusicShowcaseBlack</include>
          <control type="image">
            <include>MusicShowcaseThumb</include>
            <info>Container(57).ListItem(1).Thumb</info>
          </control>
          <include>genre_Showcase_8</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MusicShowcaseGlassOverlayAngled</include>
          </control>
          <include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>
          <control type="image">
            <include>MusicShowcaseThumbReflection</include>
            <info>Container(57).ListItem(1).Thumb</info>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MusicShowcaseThumbReflectionCD</include>
          </control>
          <include>genre_Showcase_ref_8</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <visible>Container.OnNext</visible>
        <animation effect="slide" end="68,0" time="250" reversible="false">Hidden</animation>
        <control type="group">
          <posx>840</posx>
          <visible>Container.OnNext</visible>
          <animation effect="rotatey" center="1395" start="0" end="-65" time="250" reversible="false" tween="quadratic" easing="in">Hidden</animation>
          <animation effect="rotatey" center="1395" start="65" end="65" time="0" condition="true">Conditional</animation>
          <control type="group">
            <include condition="Window.IsActive(2)">MusicShowcaseBlack</include>
            <control type="image">
              <include>MusicShowcaseThumb</include>
              <info>Container(57).ListItem(0).Thumb</info>
            </control>
            <include>genre_Showcase_7</include>
            <!-- <<<<<< Add this -->
            <control type="image">
              <description>Glass overlay</description>
              <include>MusicShowcaseGlassOverlayAngled</include>
            </control>
            <include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>
            <control type="image">
              <include>MusicShowcaseThumbReflection</include>
              <info>Container(57).ListItem(0).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MusicShowcaseThumbReflectionCD</include>
            </control>
            <include>genre_Showcase_ref_7</include>
            <!-- <<<<<< Add this -->
          </control>
        </control>
        <control type="group">
          <posx>758</posx>
          <visible>Container.OnNext</visible>
          <animation effect="rotatey" center="608" start="0" end="-65" time="250" reversible="false" tween="quadratic" easing="out">Hidden</animation>
          <control type="group">
            <include condition="Window.IsActive(2)">MusicShowcaseBlack</include>
            <control type="image">
              <include>MusicShowcaseThumb</include>
              <info>Container(57).ListItem(-1).Thumb</info>
            </control>
            <include>genre_Showcase_6</include>
            <!-- <<<<<< Add this -->
            <control type="image">
              <description>Glass overlay</description>
              <include>MusicShowcaseGlassOverlayAngled</include>
            </control>
            <include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>
            <control type="image">
              <include>MusicShowcaseThumbReflection</include>
              <info>Container(57).ListItem(-1).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MusicShowcaseThumbReflectionCD</include>
            </control>
            <include>genre_Showcase_ref_6</include>
            <!-- <<<<<< Add this -->
          </control>
        </control>
      </control>
    </control>
    <control type="group" id="7002">
      <posy>580</posy>
      <camera x="960" y="810" />
      <visible>Control.IsVisible(57) + Container.OnPrevious + ![Skin.HasSetting(flattenshowcase) | Container.Content(episodes)]</visible>
      <animation effect="slide" end="150,0" time="250" reversible="false">Hidden</animation>
      <control type="group">
        <posx>1440</posx>
        <visible>Container.OnPrevious</visible>
        <animation effect="fade" start="100" end="0" time="250" reversible="false">Hidden</animation>
        <animation effect="rotatey" center="1995" start="65" end="65" time="0" condition="true">Conditional</animation>
        <control type="group">
          <include condition="Window.IsActive(2)">MusicShowcaseBlack</include>
          <control type="image">
            <include>MusicShowcaseThumb</include>
            <info>Container(57).ListItem(6).Thumb</info>
          </control>
          <include>genre_Showcase_13</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MusicShowcaseGlassOverlayAngled</include>
          </control>
          <include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>
          <control type="image">
            <include>MusicShowcaseThumbReflection</include>
            <info>Container(57).ListItem(6).Thumb</info>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MusicShowcaseThumbReflectionCD</include>
          </control>
          <include>genre_Showcase_ref_13</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>1290</posx>
        <animation effect="rotatey" center="1845" start="65" end="65" time="0" condition="true">Conditional</animation>
        <control type="group">
          <include condition="Window.IsActive(2)">MusicShowcaseBlack</include>
          <control type="image">
            <include>MusicShowcaseThumb</include>
            <info>Container(57).ListItem(5).Thumb</info>
          </control>
          <include>genre_Showcase_12</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MusicShowcaseGlassOverlayAngled</include>
          </control>
          <include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>
          <control type="image">
            <include>MusicShowcaseThumbReflection</include>
            <info>Container(57).ListItem(5).Thumb</info>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MusicShowcaseThumbReflectionCD</include>
          </control>
          <include>genre_Showcase_ref_12</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>1140</posx>
        <animation effect="rotatey" center="1695" start="65" end="65" time="0" condition="true">Conditional</animation>
        <control type="group">
          <include condition="Window.IsActive(2)">MusicShowcaseBlack</include>
          <control type="image">
            <include>MusicShowcaseThumb</include>
            <info>Container(57).ListItem(4).Thumb</info>
          </control>
          <include>genre_Showcase_11</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MusicShowcaseGlassOverlayAngled</include>
          </control>
          <include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>
          <control type="image">
            <include>MusicShowcaseThumbReflection</include>
            <info>Container(57).ListItem(4).Thumb</info>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MusicShowcaseThumbReflectionCD</include>
          </control>
          <include>genre_Showcase_ref_11</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>990</posx>
        <animation effect="rotatey" center="1545" start="65" end="65" time="0" condition="true">Conditional</animation>
        <control type="group">
          <include condition="Window.IsActive(2)">MusicShowcaseBlack</include>
          <control type="image">
            <include>MusicShowcaseThumb</include>
            <info>Container(57).ListItem(3).Thumb</info>
          </control>
          <include>genre_Showcase_10</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MusicShowcaseGlassOverlayAngled</include>
          </control>
          <include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>
          <control type="image">
            <include>MusicShowcaseThumbReflection</include>
            <info>Container(57).ListItem(3).Thumb</info>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MusicShowcaseThumbReflectionCD</include>
          </control>
          <include>genre_Showcase_ref_10</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>840</posx>
        <animation effect="rotatey" center="1395" start="65" end="65" time="0" condition="true">Conditional</animation>
        <control type="group">
          <include condition="Window.IsActive(2)">MusicShowcaseBlack</include>
          <control type="image">
            <include>MusicShowcaseThumb</include>
            <info>Container(57).ListItem(2).Thumb</info>
          </control>
          <include>genre_Showcase_9</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MusicShowcaseGlassOverlayAngled</include>
          </control>
          <include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>
          <control type="image">
            <include>MusicShowcaseThumbReflection</include>
            <info>Container(57).ListItem(2).Thumb</info>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MusicShowcaseThumbReflectionCD</include>
          </control>
          <include>genre_Showcase_ref_9</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>-75</posx>
        <visible>!Container.OnPrevious</visible>
        <animation effect="fade" start="0" end="100" time="250" reversible="false">Visible</animation>
        <animation effect="rotatey" center="-225" start="-65" end="-65" time="0" condition="true">Conditional</animation>
        <control type="group">
          <include condition="Window.IsActive(2)">MusicShowcaseBlack</include>
          <control type="image">
            <include>MusicShowcaseThumb</include>
            <info>Container(57).ListItem(-5).Thumb</info>
          </control>
          <include>genre_Showcase_2</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MusicShowcaseGlassOverlayAngled</include>
          </control>
          <include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>
          <control type="image">
            <include>MusicShowcaseThumbReflection</include>
            <info>Container(57).ListItem(-5).Thumb</info>
          </control>
          <include>genre_Showcase_ref_2</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>75</posx>
        <animation effect="rotatey" center="-75" start="-65" end="-65" time="0" condition="true">Conditional</animation>
        <control type="group">
          <include condition="Window.IsActive(2)">MusicShowcaseBlack</include>
          <control type="image">
            <include>MusicShowcaseThumb</include>
            <info>Container(57).ListItem(-4).Thumb</info>
          </control>
          <include>genre_Showcase_3</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MusicShowcaseGlassOverlayAngled</include>
          </control>
          <include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>
          <control type="image">
            <include>MusicShowcaseThumbReflection</include>
            <info>Container(57).ListItem(-4).Thumb</info>
          </control>
          <include>genre_Showcase_ref_3</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>225</posx>
        <animation effect="rotatey" center="75" start="-65" end="-65" time="0" condition="true">Conditional</animation>
        <control type="group">
          <include condition="Window.IsActive(2)">MusicShowcaseBlack</include>
          <control type="image">
            <include>MusicShowcaseThumb</include>
            <info>Container(57).ListItem(-3).Thumb</info>
          </control>
          <include>genre_Showcase_4</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MusicShowcaseGlassOverlayAngled</include>
          </control>
          <include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>
          <control type="image">
            <include>MusicShowcaseThumbReflection</include>
            <info>Container(57).ListItem(-3).Thumb</info>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MusicShowcaseThumbReflectionCD</include>
          </control>
          <include>genre_Showcase_ref_4</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>375</posx>
        <animation effect="rotatey" center="225" start="-65" end="-65" time="0" condition="true">Conditional</animation>
        <control type="group">
          <include condition="Window.IsActive(2)">MusicShowcaseBlack</include>
          <control type="image">
            <include>MusicShowcaseThumb</include>
            <info>Container(57).ListItem(-2).Thumb</info>
          </control>
          <include>genre_Showcase_5</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MusicShowcaseGlassOverlayAngled</include>
          </control>
          <include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>
          <control type="image">
            <include>MusicShowcaseThumbReflection</include>
            <info>Container(57).ListItem(-2).Thumb</info>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MusicShowcaseThumbReflectionCD</include>
          </control>
          <include>genre_Showcase_ref_5</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>525</posx>
        <animation effect="rotatey" center="375" start="-65" end="-65" time="0" condition="true">Conditional</animation>
        <control type="group">
          <include condition="Window.IsActive(2)">MusicShowcaseBlack</include>
          <control type="image">
            <include>MusicShowcaseThumb</include>
            <info>Container(57).ListItem(-1).Thumb</info>
          </control>
          <include>genre_Showcase_6</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MusicShowcaseGlassOverlayAngled</include>
          </control>
          <include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>
          <control type="image">
            <include>MusicShowcaseThumbReflection</include>
            <info>Container(57).ListItem(-1).Thumb</info>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MusicShowcaseThumbReflectionCD</include>
          </control>
          <include>genre_Showcase_ref_6</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <visible>Container.OnPrevious</visible>
        <animation effect="slide" end="-68,0" time="250" reversible="false">Hidden</animation>
        <control type="group">
          <posx>675</posx>
          <visible>Container.OnPrevious</visible>
          <animation effect="rotatey" center="525" start="0" end="65" time="250" reversible="false" tween="quadratic" easing="in">Hidden</animation>
          <animation effect="rotatey" center="525" start="-65" end="-65" time="0" condition="true">Conditional</animation>
          <control type="group">
            <include condition="Window.IsActive(2)">MusicShowcaseBlack</include>
            <control type="image">
              <include>MusicShowcaseThumb</include>
              <info>Container(57).ListItem(0).Thumb</info>
            </control>
            <include>genre_Showcase_7</include>
            <!-- <<<<<< Add this -->
            <control type="image">
              <description>Glass overlay</description>
              <include>MusicShowcaseGlassOverlayAngled</include>
            </control>
            <include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>
            <control type="image">
              <include>MusicShowcaseThumbReflection</include>
              <info>Container(57).ListItem(0).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MusicShowcaseThumbReflectionCD</include>
            </control>
            <include>genre_Showcase_ref_7</include>
            <!-- <<<<<< Add this -->
          </control>
        </control>
        <control type="group">
          <posx>758</posx>
          <visible>Container.OnPrevious</visible>
          <animation effect="rotatey" center="1312" start="0" end="65" time="250" reversible="false" tween="quadratic" easing="out">Hidden</animation>
          <control type="group">
            <include condition="Window.IsActive(2)">MusicShowcaseBlack</include>
            <control type="image">
              <include>MusicShowcaseThumb</include>
              <info>Container(57).ListItem(1).Thumb</info>
            </control>
            <include>genre_Showcase_8</include>
            <!-- <<<<<< Add this -->
            <control type="image">
              <description>Glass overlay</description>
              <include>MusicShowcaseGlassOverlayAngled</include>
            </control>
            <include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>
            <control type="image">
              <include>MusicShowcaseThumbReflection</include>
              <info>Container(57).ListItem(1).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MusicShowcaseThumbReflectionCD</include>
            </control>
            <include>genre_Showcase_ref_8</include>
            <!-- <<<<<< Add this -->
          </control>
        </control>
      </control>
    </control>
    <control type="button" id="970">
      <texture>-</texture>
      <visible>![Skin.HasSetting(flattenshowcase) | Container.Content(episodes)]</visible>
      <animation effect="fade" start="100" end="0" time="800">Hidden</animation>
    </control>
    <control type="group" id="7000">
      <posy>580</posy>
      <camera x="960" y="810" />
      <animation effect="fade" time="500">WindowOpen</animation>
      <animation effect="fade" time="200">WindowClose</animation>
      <visible>Control.IsVisible(57) + !Control.IsVisible(7001) + !Control.IsVisible(7002) + [Control.IsVisible(970) + !Container.Content(episodes)]</visible>
      <control type="group">
        <posx>75</posx>
        <animation effect="rotatey" center="-75" start="-65" end="-65" time="0" condition="true">Conditional</animation>
        <animation type="Conditional" condition="Skin.HasSetting(flattenshowcase)">
          <effect type="rotatey" center="-75" start="0" end="65" time="800" tween="cubic" easing="inout" />
          <effect type="slide" start="0" end="-1192" time="800" tween="cubic" easing="inout" />
        </animation>
        <control type="group">
          <include condition="Window.IsActive(2)">MusicShowcaseBlack</include>
          <control type="image">
            <include>MusicShowcaseThumb</include>
            <info>Container(57).ListItem(-5).Thumb</info>
          </control>
          <include>genre_Showcase_2</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MusicShowcaseGlassOverlayAngled</include>
          </control>
          <include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>
          <control type="image">
            <include>MusicShowcaseThumbReflection</include>
            <info>Container(57).ListItem(-5).Thumb</info>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MusicShowcaseThumbReflectionCD</include>
          </control>
          <include>genre_Showcase_ref_2</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>225</posx>
        <animation effect="rotatey" center="75" start="-65" end="-65" time="0" condition="true">Conditional</animation>
        <animation type="Conditional" condition="Skin.HasSetting(flattenshowcase)">
          <effect type="rotatey" center="75" start="0" end="65" time="800" tween="cubic" easing="inout" />
          <effect type="slide" start="0" end="-968" time="800" tween="cubic" easing="inout" />
        </animation>
        <control type="group">
          <include condition="Window.IsActive(2)">MusicShowcaseBlack</include>
          <control type="image">
            <include>MusicShowcaseThumb</include>
            <info>Container(57).ListItem(-4).Thumb</info>
          </control>
          <include>genre_Showcase_3</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MusicShowcaseGlassOverlayAngled</include>
          </control>
          <include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>
          <control type="image">
            <include>MusicShowcaseThumbReflection</include>
            <info>Container(57).ListItem(-4).Thumb</info>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MusicShowcaseThumbReflectionCD</include>
          </control>
          <include>genre_Showcase_ref_3</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>375</posx>
        <animation effect="rotatey" center="225" start="-65" end="-65" time="0" condition="true">Conditional</animation>
        <animation type="Conditional" condition="Skin.HasSetting(flattenshowcase)">
          <effect type="rotatey" center="225" start="0" end="65" time="800" tween="cubic" easing="inout" />
          <effect type="slide" start="0" end="-742" time="800" tween="cubic" easing="inout" />
        </animation>
        <control type="group">
          <include condition="Window.IsActive(2)">MusicShowcaseBlack</include>
          <control type="image">
            <include>MusicShowcaseThumb</include>
            <info>Container(57).ListItem(-3).Thumb</info>
          </control>
          <include>genre_Showcase_4</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MusicShowcaseGlassOverlayAngled</include>
          </control>
          <include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>
          <control type="image">
            <include>MusicShowcaseThumbReflection</include>
            <info>Container(57).ListItem(-3).Thumb</info>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MusicShowcaseThumbReflectionCD</include>
          </control>
          <include>genre_Showcase_ref_4</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>525</posx>
        <animation effect="rotatey" center="375" start="-65" end="-65" time="0" condition="true">Conditional</animation>
        <animation type="Conditional" condition="Skin.HasSetting(flattenshowcase)">
          <effect type="rotatey" center="375" start="0" end="65" time="800" tween="cubic" easing="inout" />
          <effect type="slide" start="0" end="-518" time="800" tween="cubic" easing="inout" />
        </animation>
        <control type="group">
          <include condition="Window.IsActive(2)">MusicShowcaseBlack</include>
          <control type="image">
            <include>MusicShowcaseThumb</include>
            <info>Container(57).ListItem(-2).Thumb</info>
          </control>
          <include>genre_Showcase_5</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MusicShowcaseGlassOverlayAngled</include>
          </control>
          <include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>
          <control type="image">
            <include>MusicShowcaseThumbReflection</include>
            <info>Container(57).ListItem(-2).Thumb</info>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MusicShowcaseThumbReflectionCD</include>
          </control>
          <include>genre_Showcase_ref_5</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>675</posx>
        <animation effect="rotatey" center="525" start="-65" end="-65" time="0" condition="true">Conditional</animation>
        <animation type="Conditional" condition="Skin.HasSetting(flattenshowcase)">
          <effect type="rotatey" center="525" start="0" end="65" time="800" tween="cubic" easing="inout" />
          <effect type="slide" start="0" end="-292" time="800" tween="cubic" easing="inout" />
        </animation>
        <control type="group">
          <include condition="Window.IsActive(2)">MusicShowcaseBlack</include>
          <control type="image">
            <include>MusicShowcaseThumb</include>
            <info>Container(57).ListItem(-1).Thumb</info>
          </control>
          <include>genre_Showcase_6</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MusicShowcaseGlassOverlayAngled</include>
          </control>
          <include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>
          <control type="image">
            <include>MusicShowcaseThumbReflection</include>
            <info>Container(57).ListItem(-1).Thumb</info>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MusicShowcaseThumbReflectionCD</include>
          </control>
          <include>genre_Showcase_ref_6</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>1440</posx>
        <animation effect="rotatey" center="1995" start="65" end="65" time="0" condition="true">Conditional</animation>
        <animation type="Conditional" condition="Skin.HasSetting(flattenshowcase)">
          <effect type="rotatey" center="1995" start="0" end="-65" time="800" tween="cubic" easing="inout" />
          <effect type="slide" start="0" end="1192" time="800" tween="cubic" easing="inout" />
        </animation>
        <control type="group">
          <include condition="Window.IsActive(2)">MusicShowcaseBlack</include>
          <control type="image">
            <include>MusicShowcaseThumb</include>
            <info>Container(57).ListItem(5).Thumb</info>
          </control>
          <include>genre_Showcase_12</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MusicShowcaseGlassOverlayAngled</include>
          </control>
          <include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>
          <control type="image">
            <include>MusicShowcaseThumbReflection</include>
            <info>Container(57).ListItem(5).Thumb</info>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MusicShowcaseThumbReflectionCD</include>
          </control>
          <include>genre_Showcase_ref_12</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>1290</posx>
        <animation effect="rotatey" center="1845" start="65" end="65" time="0" condition="true">Conditional</animation>
        <animation type="Conditional" condition="Skin.HasSetting(flattenshowcase)">
          <effect type="rotatey" center="1845" start="0" end="-65" time="800" tween="cubic" easing="inout" />
          <effect type="slide" start="0" end="968" time="800" tween="cubic" easing="inout" />
        </animation>
        <control type="group">
          <include condition="Window.IsActive(2)">MusicShowcaseBlack</include>
          <control type="image">
            <include>MusicShowcaseThumb</include>
            <info>Container(57).ListItem(4).Thumb</info>
          </control>
          <include>genre_Showcase_11</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MusicShowcaseGlassOverlayAngled</include>
          </control>
          <include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>
          <control type="image">
            <include>MusicShowcaseThumbReflection</include>
            <info>Container(57).ListItem(4).Thumb</info>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MusicShowcaseThumbReflectionCD</include>
          </control>
          <include>genre_Showcase_ref_11</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>1140</posx>
        <animation effect="rotatey" center="1695" start="65" end="65" time="0" condition="true">Conditional</animation>
        <animation type="Conditional" condition="Skin.HasSetting(flattenshowcase)">
          <effect type="rotatey" center="1695" start="0" end="-65" time="800" tween="cubic" easing="inout" />
          <effect type="slide" start="0" end="742" time="800" tween="cubic" easing="inout" />
        </animation>
        <control type="group">
          <include condition="Window.IsActive(2)">MusicShowcaseBlack</include>
          <control type="image">
            <include>MusicShowcaseThumb</include>
            <info>Container(57).ListItem(3).Thumb</info>
          </control>
          <include>genre_Showcase_10</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MusicShowcaseGlassOverlayAngled</include>
          </control>
          <include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>
          <control type="image">
            <include>MusicShowcaseThumbReflection</include>
            <info>Container(57).ListItem(3).Thumb</info>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MusicShowcaseThumbReflectionCD</include>
          </control>
          <include>genre_Showcase_ref_10</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>990</posx>
        <animation effect="rotatey" center="1545" start="65" end="65" time="0" condition="true">Conditional</animation>
        <animation type="Conditional" condition="Skin.HasSetting(flattenshowcase)">
          <effect type="rotatey" center="1545" start="0" end="-65" time="800" tween="cubic" easing="inout" />
          <effect type="slide" start="0" end="518" time="800" tween="cubic" easing="inout" />
        </animation>
        <control type="group">
          <include condition="Window.IsActive(2)">MusicShowcaseBlack</include>
          <control type="image">
            <include>MusicShowcaseThumb</include>
            <info>Container(57).ListItem(2).Thumb</info>
          </control>
          <include>genre_Showcase_9</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MusicShowcaseGlassOverlayAngled</include>
          </control>
          <include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>
          <control type="image">
            <include>MusicShowcaseThumbReflection</include>
            <info>Container(57).ListItem(2).Thumb</info>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MusicShowcaseThumbReflectionCD</include>
          </control>
          <include>genre_Showcase_ref_9</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>840</posx>
        <animation effect="rotatey" center="1395" start="65" end="65" time="0" condition="true">Conditional</animation>
        <animation type="Conditional" condition="Skin.HasSetting(flattenshowcase)">
          <effect type="rotatey" center="1395" start="0" end="-65" time="800" tween="cubic" easing="inout" />
          <effect type="slide" start="0" end="292" time="800" tween="cubic" easing="inout" />
        </animation>
        <control type="group">
          <include condition="Window.IsActive(2)">MusicShowcaseBlack</include>
          <control type="image">
            <include>MusicShowcaseThumb</include>
            <info>Container(57).ListItem(1).Thumb</info>
          </control>
          <include>genre_Showcase_8</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MusicShowcaseGlassOverlayAngled</include>
          </control>
          <control type="image">
            <include>MusicShowcaseThumbReflection</include>
            <info>Container(57).ListItem(1).Thumb</info>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MusicShowcaseThumbReflectionCD</include>
          </control>
          <include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>
          <include>genre_Showcase_ref_8</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>758</posx>
        <control type="group">
          <include condition="Window.IsActive(2)">MusicShowcaseBlack</include>
          <control type="image">
            <include>MusicShowcaseThumbMain</include>
            <info>Container(57).ListItem(0).Thumb</info>
          </control>
          <include>genre_Showcase_7</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MusicShowcaseGlassOverlayMain</include>
          </control>
          <control type="image">
            <include>MusicShowcaseThumbReflection</include>
            <info>Container(57).ListItem(0).Thumb</info>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MusicShowcaseThumbReflectionCDMain</include>
          </control>
          <include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>
          <include>genre_Showcase_ref_7</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
    </control>
  </include>
  <include name="ShowcaseMovies">
    <control type="group" id="6001">
      <posy>570</posy>
      <camera x="960" y="810" />
      <visible>Control.IsVisible(57) + Container.OnNext + !Skin.HasSetting(flattenshowcase)</visible>
      <animation effect="slide" end="-135,0" time="250" reversible="false">Hidden</animation>
      <control type="group">
        <posx>15</posx>
        <visible>Container.OnNext</visible>
        <animation effect="fade" start="100" end="0" time="250" reversible="false">Hidden</animation>
        <animation effect="rotatey" center="-135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
        <control type="group">
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(-7).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(-7).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <include>genre_Showcase_15</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MovieShowcaseGlassOverlayAngled</include>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(-7).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(-7).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MovieShowcaseThumbReflectionDVD</include>
          </control>
          <control type="image">
            <include condition="!Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseNormal</include>
            <include condition="Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseDVD</include>
            <include>detailcolornofocus</include>
            <visible>!Skin.HasSetting(nomovieoverlays) + !IsEmpty(ListItem(-7).Overlay)</visible>
            <info>ListItem(-7).Overlay</info>
          </control>
          <include>genre_Showcase_ref_15</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>150</posx>
        <animation effect="rotatey" center="0" start="-55" end="-55" time="0" condition="true">Conditional</animation>
        <control type="group">
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(-6).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(-6).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <include>genre_Showcase_1</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MovieShowcaseGlassOverlayAngled</include>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(-6).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(-6).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MovieShowcaseThumbReflectionDVD</include>
          </control>
          <control type="image">
            <include condition="!Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseNormal</include>
            <include condition="Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseDVD</include>
            <include>detailcolornofocus</include>
            <visible>!Skin.HasSetting(nomovieoverlays) + !IsEmpty(ListItem(-6).Overlay)</visible>
            <info>ListItem(-6).Overlay</info>
          </control>
          <include>genre_Showcase_ref_1</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>285</posx>
        <animation effect="rotatey" center="135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
        <control type="group">
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(-5).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(-5).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <include>genre_Showcase_2</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MovieShowcaseGlassOverlayAngled</include>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(-5).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(-5).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MovieShowcaseThumbReflectionDVD</include>
          </control>
          <control type="image">
            <include condition="!Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseNormal</include>
            <include condition="Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseDVD</include>
            <include>detailcolornofocus</include>
            <visible>!Skin.HasSetting(nomovieoverlays) + !IsEmpty(ListItem(-5).Overlay)</visible>
            <info>ListItem(-5).Overlay</info>
          </control>
          <include>genre_Showcase_ref_2</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>420</posx>
        <animation effect="rotatey" center="270" start="-55" end="-55" time="0" condition="true">Conditional</animation>
        <control type="group">
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(-4).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(-4).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <include>genre_Showcase_3</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MovieShowcaseGlassOverlayAngled</include>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(-4).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(-4).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MovieShowcaseThumbReflectionDVD</include>
          </control>
          <control type="image">
            <include condition="!Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseNormal</include>
            <include condition="Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseDVD</include>
            <include>detailcolornofocus</include>
            <visible>!Skin.HasSetting(nomovieoverlays) + !IsEmpty(ListItem(-4).Overlay)</visible>
            <info>ListItem(-4).Overlay</info>
          </control>
          <include>genre_Showcase_ref_3</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>555</posx>
        <animation effect="rotatey" center="405" start="-55" end="-55" time="0" condition="true">Conditional</animation>
        <control type="group">
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(-3).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(-3).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <include>genre_Showcase_4</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MovieShowcaseGlassOverlayAngled</include>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(-3).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(-3).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MovieShowcaseThumbReflectionDVD</include>
          </control>
          <control type="image">
            <include condition="!Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseNormal</include>
            <include condition="Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseDVD</include>
            <include>detailcolornofocus</include>
            <visible>!Skin.HasSetting(nomovieoverlays) + !IsEmpty(ListItem(-3).Overlay)</visible>
            <info>ListItem(-3).Overlay</info>
          </control>
          <include>genre_Showcase_ref_4</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>690</posx>
        <animation effect="rotatey" center="540" start="-55" end="-55" time="0" condition="true">Conditional</animation>
        <control type="group">
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(-2).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(-2).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <include>genre_Showcase_5</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MovieShowcaseGlassOverlayAngled</include>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(-2).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(-2).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MovieShowcaseThumbReflectionDVD</include>
          </control>
          <control type="image">
            <include condition="!Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseNormal</include>
            <include condition="Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseDVD</include>
            <include>detailcolornofocus</include>
            <visible>!Skin.HasSetting(nomovieoverlays) + !IsEmpty(ListItem(-2).Overlay)</visible>
            <info>ListItem(-2).Overlay</info>
          </control>
          <include>genre_Showcase_ref_5</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>1770</posx>
        <visible>!Container.OnNext</visible>
        <animation effect="fade" start="0" end="0" delay="0" time="0" reversible="false">Visible</animation>
        <control type="group">
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(9).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(9).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(9).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(9).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
        </control>
      </control>
      <control type="group">
        <posx>1770</posx>
        <visible>!Container.OnNext</visible>
        <animation effect="fade" start="0" end="0" delay="0" time="0" reversible="false">Visible</animation>
        <control type="group">
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(8).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(8).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(8).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(8).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
        </control>
      </control>
      <control type="group">
        <posx>1770</posx>
        <visible>!Container.OnNext</visible>
        <animation effect="fade" start="0" end="0" delay="0" time="0" reversible="false">Visible</animation>
        <control type="group">
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(7).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(7).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(7).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(7).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
        </control>
      </control>
      <control type="group">
        <posx>1635</posx>
        <visible>!Container.OnNext</visible>
        <animation effect="fade" start="0" end="100" delay="0" time="250" reversible="false">Visible</animation>
        <animation effect="rotatey" center="2205" start="55" end="55" time="0" condition="true">Conditional</animation>
        <control type="group">
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(6).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(6).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <include>genre_Showcase_13</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MovieShowcaseGlassOverlayAngled</include>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(6).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(6).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MovieShowcaseThumbReflectionDVD</include>
          </control>
          <control type="image">
            <include condition="!Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseNormal</include>
            <include condition="Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseDVD</include>
            <include>detailcolornofocus</include>
            <visible>!Skin.HasSetting(nomovieoverlays) + !IsEmpty(ListItem(6).Overlay)</visible>
            <info>ListItem(6).Overlay</info>
          </control>
          <include>genre_Showcase_ref_13</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>1500</posx>
        <animation effect="rotatey" center="2070" start="55" end="55" time="0" condition="true">Conditional</animation>
        <control type="group">
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(5).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(5).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <include>genre_Showcase_12</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MovieShowcaseGlassOverlayAngled</include>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(5).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(5).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MovieShowcaseThumbReflectionDVD</include>
          </control>
          <control type="image">
            <include condition="!Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseNormal</include>
            <include condition="Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseDVD</include>
            <include>detailcolornofocus</include>
            <visible>!Skin.HasSetting(nomovieoverlays) + !IsEmpty(ListItem(5).Overlay)</visible>
            <info>ListItem(5).Overlay</info>
          </control>
          <include>genre_Showcase_ref_12</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>1365</posx>
        <animation effect="rotatey" center="1935" start="55" end="55" time="0" condition="true">Conditional</animation>
        <control type="group">
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(4).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(4).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <include>genre_Showcase_11</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MovieShowcaseGlassOverlayAngled</include>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(4).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(4).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MovieShowcaseThumbReflectionDVD</include>
          </control>
          <control type="image">
            <include condition="!Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseNormal</include>
            <include condition="Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseDVD</include>
            <include>detailcolornofocus</include>
            <visible>!Skin.HasSetting(nomovieoverlays) + !IsEmpty(ListItem(4).Overlay)</visible>
            <info>ListItem(4).Overlay</info>
          </control>
          <include>genre_Showcase_ref_11</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>1230</posx>
        <animation effect="rotatey" center="1800" start="55" end="55" time="0" condition="true">Conditional</animation>
        <control type="group">
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(3).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(3).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <include>genre_Showcase_10</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MovieShowcaseGlassOverlayAngled</include>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(3).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(3).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MovieShowcaseThumbReflectionDVD</include>
          </control>
          <control type="image">
            <include condition="!Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseNormal</include>
            <include condition="Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseDVD</include>
            <include>detailcolornofocus</include>
            <visible>!Skin.HasSetting(nomovieoverlays) + !IsEmpty(ListItem(3).Overlay)</visible>
            <info>ListItem(3).Overlay</info>
          </control>
          <include>genre_Showcase_ref_10</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>1095</posx>
        <animation effect="rotatey" center="1665" start="55" end="55" time="0" condition="true">Conditional</animation>
        <control type="group">
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(2).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(2).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <include>genre_Showcase_9</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MovieShowcaseGlassOverlayAngled</include>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(2).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(2).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MovieShowcaseThumbReflectionDVD</include>
          </control>
          <control type="image">
            <include condition="!Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseNormal</include>
            <include condition="Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseDVD</include>
            <include>detailcolornofocus</include>
            <visible>!Skin.HasSetting(nomovieoverlays) + !IsEmpty(ListItem(2).Overlay)</visible>
            <info>ListItem(2).Overlay</info>
          </control>
          <include>genre_Showcase_ref_9</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>960</posx>
        <animation effect="rotatey" center="1530" start="55" end="55" time="0" condition="true">Conditional</animation>
        <control type="group">
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(1).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(1).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <include>genre_Showcase_8</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MovieShowcaseGlassOverlayAngled</include>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(1).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(1).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MovieShowcaseThumbReflectionDVD</include>
          </control>
          <control type="image">
            <include condition="!Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseNormal</include>
            <include condition="Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseDVD</include>
            <include>detailcolornofocus</include>
            <visible>!Skin.HasSetting(nomovieoverlays) + !IsEmpty(ListItem(1).Overlay)</visible>
            <info>ListItem(1).Overlay</info>
          </control>
          <include>genre_Showcase_ref_8</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <visible>Container.OnNext</visible>
        <animation effect="slide" end="75,0" time="250" reversible="false">Hidden</animation>
        <control type="group">
          <posx>825</posx>
          <visible>Container.OnNext</visible>
          <animation effect="rotatey" center="1395" start="0" end="-55" time="250" reversible="false" tween="quadratic" easing="in">Hidden</animation>
          <animation effect="rotatey" center="1395" start="55" end="55" time="0" condition="true">Conditional</animation>
          <control type="group">
            <control type="image">
              <include>MovieShowcaseThumb</include>
              <info>Container(57).ListItem(0).Thumb</info>
              <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
            </control>
            <control type="image">
              <include>MovieShowcaseThumb</include>
              <info>Container(57).ListItem(0).Thumb</info>
              <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
            </control>
            <include>genre_Showcase_7</include>
            <!-- <<<<<< Add this -->
            <control type="image">
              <description>Glass overlay</description>
              <include>MovieShowcaseGlassOverlayAngled</include>
            </control>
            <control type="image">
              <include>MovieShowcaseThumbReflection</include>
              <info>Container(57).ListItem(0).Thumb</info>
              <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
            </control>
            <control type="image">
              <include>MovieShowcaseThumbReflection</include>
              <info>Container(57).ListItem(0).Thumb</info>
              <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MovieShowcaseThumbReflectionDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseNormal</include>
              <include condition="Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseDVD</include>
              <include>detailcolornofocus</include>
              <visible>!Skin.HasSetting(nomovieoverlays) + !IsEmpty(ListItem(0).Overlay)</visible>
              <info>ListItem(0).Overlay</info>
            </control>
            <include>genre_Showcase_ref_7</include>
            <!-- <<<<<< Add this -->
          </control>
        </control>
        <control type="group">
          <posx>758</posx>
          <visible>Container.OnNext</visible>
          <animation effect="rotatey" center="608" start="0" end="-55" time="250" reversible="false" tween="quadratic" easing="out">Hidden</animation>
          <control type="group">
            <control type="image">
              <include>MovieShowcaseThumb</include>
              <info>Container(57).ListItem(-1).Thumb</info>
              <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
            </control>
            <control type="image">
              <include>MovieShowcaseThumb</include>
              <info>Container(57).ListItem(-1).Thumb</info>
              <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
            </control>
            <include>genre_Showcase_6</include>
            <!-- <<<<<< Add this -->
            <control type="image">
              <description>Glass overlay</description>
              <include>MovieShowcaseGlassOverlayAngled</include>
            </control>
            <control type="image">
              <include>MovieShowcaseThumbReflection</include>
              <info>Container(57).ListItem(-1).Thumb</info>
              <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
            </control>
            <control type="image">
              <include>MovieShowcaseThumbReflection</include>
              <info>Container(57).ListItem(-1).Thumb</info>
              <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MovieShowcaseThumbReflectionDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseNormal</include>
              <include condition="Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseDVD</include>
              <include>detailcolornofocus</include>
              <visible>!Skin.HasSetting(nomovieoverlays) + !IsEmpty(ListItem(-1).Overlay)</visible>
              <info>ListItem(-1).Overlay</info>
            </control>
            <include>genre_Showcase_ref_6</include>
            <!-- <<<<<< Add this -->
          </control>
        </control>
      </control>
    </control>
    <control type="group" id="6002">
      <posy>570</posy>
      <camera x="960" y="810" />
      <visible>Control.IsVisible(57) + Container.OnPrevious + !Skin.HasSetting(flattenshowcase)</visible>
      <animation effect="slide" end="135,0" time="250" reversible="false">Hidden</animation>
      <control type="group">
        <posx>1500</posx>
        <visible>Container.OnPrevious</visible>
        <animation effect="fade" start="100" end="0" time="250" reversible="false">Hidden</animation>
        <animation effect="rotatey" center="2070" start="55" end="55" time="0" condition="true">Conditional</animation>
        <control type="group">
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(7).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(7).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <include>genre_Showcase_14</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MovieShowcaseGlassOverlayAngled</include>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(7).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(7).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MovieShowcaseThumbReflectionDVD</include>
          </control>
          <control type="image">
            <include condition="!Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseNormal</include>
            <include condition="Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseDVD</include>
            <include>detailcolornofocus</include>
            <visible>!Skin.HasSetting(nomovieoverlays) + !IsEmpty(ListItem(7).Overlay)</visible>
            <info>ListItem(7).Overlay</info>
          </control>
          <include>genre_Showcase_ref_14</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>1365</posx>
        <animation effect="rotatey" center="1935" start="55" end="55" time="0" condition="true">Conditional</animation>
        <control type="group">
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(6).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(6).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <include>genre_Showcase_13</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MovieShowcaseGlassOverlayAngled</include>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(6).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(6).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MovieShowcaseThumbReflectionDVD</include>
          </control>
          <control type="image">
            <include condition="!Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseNormal</include>
            <include condition="Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseDVD</include>
            <include>detailcolornofocus</include>
            <visible>!Skin.HasSetting(nomovieoverlays) + !IsEmpty(ListItem(6).Overlay)</visible>
            <info>ListItem(6).Overlay</info>
          </control>
          <include>genre_Showcase_ref_13</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>1230</posx>
        <animation effect="rotatey" center="1800" start="55" end="55" time="0" condition="true">Conditional</animation>
        <control type="group">
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(5).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(5).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <include>genre_Showcase_12</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MovieShowcaseGlassOverlayAngled</include>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(5).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(5).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MovieShowcaseThumbReflectionDVD</include>
          </control>
          <control type="image">
            <include condition="!Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseNormal</include>
            <include condition="Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseDVD</include>
            <include>detailcolornofocus</include>
            <visible>!Skin.HasSetting(nomovieoverlays) + !IsEmpty(ListItem(5).Overlay)</visible>
            <info>ListItem(5).Overlay</info>
          </control>
          <include>genre_Showcase_ref_12</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>1095</posx>
        <animation effect="rotatey" center="1665" start="55" end="55" time="0" condition="true">Conditional</animation>
        <control type="group">
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(4).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(4).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <include>genre_Showcase_11</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MovieShowcaseGlassOverlayAngled</include>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(4).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(4).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MovieShowcaseThumbReflectionDVD</include>
          </control>
          <control type="image">
            <include condition="!Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseNormal</include>
            <include condition="Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseDVD</include>
            <include>detailcolornofocus</include>
            <visible>!Skin.HasSetting(nomovieoverlays) + !IsEmpty(ListItem(4).Overlay)</visible>
            <info>ListItem(4).Overlay</info>
          </control>
          <include>genre_Showcase_ref_11</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>960</posx>
        <animation effect="rotatey" center="1530" start="55" end="55" time="0" condition="true">Conditional</animation>
        <control type="group">
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(3).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(3).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <include>genre_Showcase_10</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MovieShowcaseGlassOverlayAngled</include>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(3).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(3).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MovieShowcaseThumbReflectionDVD</include>
          </control>
          <control type="image">
            <include condition="!Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseNormal</include>
            <include condition="Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseDVD</include>
            <include>detailcolornofocus</include>
            <visible>!Skin.HasSetting(nomovieoverlays) + !IsEmpty(ListItem(3).Overlay)</visible>
            <info>ListItem(3).Overlay</info>
          </control>
          <include>genre_Showcase_ref_10</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>825</posx>
        <animation effect="rotatey" center="1395" start="55" end="55" time="0" condition="true">Conditional</animation>
        <control type="group">
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(2).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(2).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <include>genre_Showcase_9</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MovieShowcaseGlassOverlayAngled</include>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(2).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(2).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MovieShowcaseThumbReflectionDVD</include>
          </control>
          <control type="image">
            <include condition="!Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseNormal</include>
            <include condition="Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseDVD</include>
            <include>detailcolornofocus</include>
            <visible>!Skin.HasSetting(nomovieoverlays) + !IsEmpty(ListItem(2).Overlay)</visible>
            <info>ListItem(2).Overlay</info>
          </control>
          <include>genre_Showcase_ref_9</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>-270</posx>
        <visible>!Container.OnPrevious</visible>
        <animation effect="fade" start="0" end="0" delay="0" time="0" reversible="false">Visible</animation>
        <control type="group">
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(-10).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(-10).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(-10).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(-10).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
        </control>
      </control>
      <control type="group">
        <posx>-270</posx>
        <visible>!Container.OnPrevious</visible>
        <animation effect="fade" start="0" end="0" delay="0" time="0" reversible="false">Visible</animation>
        <control type="group">
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(-9).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(-9).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(-9).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(-9).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
        </control>
      </control>
      <control type="group">
        <posx>-270</posx>
        <visible>!Container.OnPrevious</visible>
        <animation effect="fade" start="0" end="0" delay="0" time="0" reversible="false">Visible</animation>
        <control type="group">
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(-8).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(-8).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(-8).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(-8).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
        </control>
      </control>
      <control type="group">
        <posx>-120</posx>
        <visible>!Container.OnPrevious</visible>
        <animation effect="fade" start="0" end="100" time="250" reversible="false">Visible</animation>
        <animation effect="rotatey" center="-270" start="-55" end="-55" time="0" condition="true">Conditional</animation>
        <control type="group">
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(-6).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(-6).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <include>genre_Showcase_1</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MovieShowcaseGlassOverlayAngled</include>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(-6).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(-6).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MovieShowcaseThumbReflectionDVD</include>
          </control>
          <control type="image">
            <include condition="!Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseNormal</include>
            <include condition="Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseDVD</include>
            <include>detailcolornofocus</include>
            <visible>!Skin.HasSetting(nomovieoverlays) + !IsEmpty(ListItem(-6).Overlay)</visible>
            <info>ListItem(-6).Overlay</info>
          </control>
          <include>genre_Showcase_ref_1</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>15</posx>
        <animation effect="rotatey" center="-135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
        <control type="group">
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(-5).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(-5).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <include>genre_Showcase_2</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MovieShowcaseGlassOverlayAngled</include>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(-5).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(-5).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MovieShowcaseThumbReflectionDVD</include>
          </control>
          <control type="image">
            <include condition="!Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseNormal</include>
            <include condition="Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseDVD</include>
            <include>detailcolornofocus</include>
            <visible>!Skin.HasSetting(nomovieoverlays) + !IsEmpty(ListItem(-5).Overlay)</visible>
            <info>ListItem(-5).Overlay</info>
          </control>
          <include>genre_Showcase_ref_2</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>150</posx>
        <animation effect="rotatey" center="0" start="-55" end="-55" time="0" condition="true">Conditional</animation>
        <control type="group">
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(-4).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(-4).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <include>genre_Showcase_3</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MovieShowcaseGlassOverlayAngled</include>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(-4).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(-4).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MovieShowcaseThumbReflectionDVD</include>
          </control>
          <control type="image">
            <include condition="!Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseNormal</include>
            <include condition="Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseDVD</include>
            <include>detailcolornofocus</include>
            <visible>!Skin.HasSetting(nomovieoverlays) + !IsEmpty(ListItem(-4).Overlay)</visible>
            <info>ListItem(-4).Overlay</info>
          </control>
          <include>genre_Showcase_ref_3</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>285</posx>
        <animation effect="rotatey" center="135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
        <control type="group">
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(-3).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(-3).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <include>genre_Showcase_4</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MovieShowcaseGlassOverlayAngled</include>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(-3).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(-3).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MovieShowcaseThumbReflectionDVD</include>
          </control>
          <control type="image">
            <include condition="!Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseNormal</include>
            <include condition="Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseDVD</include>
            <include>detailcolornofocus</include>
            <visible>!Skin.HasSetting(nomovieoverlays) + !IsEmpty(ListItem(-3).Overlay)</visible>
            <info>ListItem(-3).Overlay</info>
          </control>
          <include>genre_Showcase_ref_4</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>420</posx>
        <animation effect="rotatey" center="270" start="-55" end="-55" time="0" condition="true">Conditional</animation>
        <control type="group">
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(-2).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(-2).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <include>genre_Showcase_5</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MovieShowcaseGlassOverlayAngled</include>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(-2).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(-2).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MovieShowcaseThumbReflectionDVD</include>
          </control>
          <control type="image">
            <include condition="!Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseNormal</include>
            <include condition="Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseDVD</include>
            <include>detailcolornofocus</include>
            <visible>!Skin.HasSetting(nomovieoverlays) + !IsEmpty(ListItem(-2).Overlay)</visible>
            <info>ListItem(-2).Overlay</info>
          </control>
          <include>genre_Showcase_ref_5</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>555</posx>
        <animation effect="rotatey" center="405" start="-55" end="-55" time="0" condition="true">Conditional</animation>
        <control type="group">
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(-1).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(-1).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <include>genre_Showcase_6</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MovieShowcaseGlassOverlayAngled</include>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(-1).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(-1).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MovieShowcaseThumbReflectionDVD</include>
          </control>
          <control type="image">
            <include condition="!Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseNormal</include>
            <include condition="Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseDVD</include>
            <include>detailcolornofocus</include>
            <visible>!Skin.HasSetting(nomovieoverlays) + !IsEmpty(ListItem(-1).Overlay)</visible>
            <info>ListItem(-1).Overlay</info>
          </control>
          <include>genre_Showcase_ref_6</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <visible>Container.OnPrevious</visible>
        <animation effect="slide" end="-75,0" time="250" reversible="false">Hidden</animation>
        <control type="group">
          <posx>690</posx>
          <visible>Container.OnPrevious</visible>
          <animation effect="rotatey" center="540" start="0" end="55" time="250" reversible="false" tween="quadratic" easing="in">Hidden</animation>
          <animation effect="rotatey" center="540" start="-55" end="-55" time="0" condition="true">Conditional</animation>
          <control type="group">
            <control type="image">
              <include>MovieShowcaseThumb</include>
              <info>Container(57).ListItem(0).Thumb</info>
              <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
            </control>
            <control type="image">
              <include>MovieShowcaseThumb</include>
              <info>Container(57).ListItem(0).Thumb</info>
              <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
            </control>
            <include>genre_Showcase_7</include>
            <!-- <<<<<< Add this -->
            <control type="image">
              <description>Glass overlay</description>
              <include>MovieShowcaseGlassOverlay</include>
            </control>
            <control type="image">
              <include>MovieShowcaseThumbReflection</include>
              <info>Container(57).ListItem(0).Thumb</info>
              <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
            </control>
            <control type="image">
              <include>MovieShowcaseThumbReflection</include>
              <info>Container(57).ListItem(0).Thumb</info>
              <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MovieShowcaseThumbReflectionDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseNormal</include>
              <include condition="Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseDVD</include>
              <include>detailcolornofocus</include>
              <visible>!Skin.HasSetting(nomovieoverlays) + !IsEmpty(ListItem(0).Overlay)</visible>
              <info>ListItem(0).Overlay</info>
            </control>
            <include>genre_Showcase_ref_7</include>
            <!-- <<<<<< Add this -->
          </control>
        </control>
        <control type="group">
          <posx>758</posx>
          <visible>Container.OnPrevious</visible>
          <animation effect="rotatey" center="1328" start="0" end="55" time="250" reversible="false" tween="quadratic" easing="out">Hidden</animation>
          <control type="group">
            <control type="image">
              <include>MovieShowcaseThumb</include>
              <info>Container(57).ListItem(1).Thumb</info>
              <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
            </control>
            <control type="image">
              <include>MovieShowcaseThumb</include>
              <info>Container(57).ListItem(1).Thumb</info>
              <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
            </control>
            <include>genre_Showcase_8</include>
            <!-- <<<<<< Add this -->
            <control type="image">
              <description>Glass overlay</description>
              <include>MovieShowcaseGlassOverlay</include>
            </control>
            <control type="image">
              <include>MovieShowcaseThumbReflection</include>
              <info>Container(57).ListItem(1).Thumb</info>
              <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
            </control>
            <control type="image">
              <include>MovieShowcaseThumbReflection</include>
              <info>Container(57).ListItem(1).Thumb</info>
              <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MovieShowcaseThumbReflectionDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseNormal</include>
              <include condition="Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseDVD</include>
              <include>detailcolornofocus</include>
              <visible>!Skin.HasSetting(nomovieoverlays) + !IsEmpty(ListItem(1).Overlay)</visible>
              <info>ListItem(1).Overlay</info>
            </control>
            <include>genre_Showcase_ref_8</include>
            <!-- <<<<<< Add this -->
          </control>
        </control>
      </control>
    </control>
    <control type="button" id="960">
      <texture>-</texture>
      <visible>!Skin.HasSetting(flattenshowcase)</visible>
      <animation effect="fade" start="100" end="0" time="800">Hidden</animation>
    </control>
    <control type="group" id="6000">
      <posy>570</posy>
      <animation effect="fade" time="500">WindowOpen</animation>
      <animation effect="fade" time="200">WindowClose</animation>
      <visible>Control.IsVisible(57) + !Control.IsVisible(6001) + !Control.IsVisible(6002) + Control.IsVisible(960)</visible>
      <camera x="960" y="810" />
      <control type="group">
        <posx>15</posx>
        <animation effect="rotatey" center="-135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
        <animation type="Conditional" condition="Skin.HasSetting(flattenshowcase)">
          <effect type="rotatey" center="-135" start="0" end="55" time="800" tween="cubic" easing="inout" />
          <effect type="slide" start="0" end="-1028" time="800" tween="cubic" easing="inout" />
        </animation>
        <control type="group">
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(-6).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(-6).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <include>genre_Showcase_1</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MovieShowcaseGlassOverlayAngled</include>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(-6).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(-6).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <include>genre_Showcase_ref_1</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>150</posx>
        <animation effect="rotatey" center="0" start="-55" end="-55" time="0" condition="true">Conditional</animation>
        <animation type="Conditional" condition="Skin.HasSetting(flattenshowcase)">
          <effect type="rotatey" center="0" start="0" end="55" time="800" tween="cubic" easing="inout" />
          <effect type="slide" start="0" end="-866" time="800" tween="cubic" easing="inout" />
        </animation>
        <control type="group">
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(-5).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(-5).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <include>genre_Showcase_2</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MovieShowcaseGlassOverlayAngled</include>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(-5).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(-5).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MovieShowcaseThumbReflectionDVD</include>
          </control>
          <control type="image">
            <include condition="!Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseNormal</include>
            <include condition="Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseDVD</include>
            <include>detailcolornofocus</include>
            <visible>!Skin.HasSetting(nomovieoverlays) + !IsEmpty(ListItem(-5).Overlay)</visible>
            <info>ListItem(-5).Overlay</info>
          </control>
          <include>genre_Showcase_ref_2</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>285</posx>
        <animation effect="rotatey" center="135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
        <animation type="Conditional" condition="Skin.HasSetting(flattenshowcase)">
          <effect type="rotatey" center="135" start="0" end="55" time="800" tween="cubic" easing="inout" />
          <effect type="slide" start="0" end="-704" time="800" tween="cubic" easing="inout" />
        </animation>
        <control type="group">
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(-4).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(-4).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <include>genre_Showcase_3</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MovieShowcaseGlassOverlayAngled</include>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(-4).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(-4).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MovieShowcaseThumbReflectionDVD</include>
          </control>
          <control type="image">
            <include condition="!Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseNormal</include>
            <include condition="Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseDVD</include>
            <include>detailcolornofocus</include>
            <visible>!Skin.HasSetting(nomovieoverlays) + !IsEmpty(ListItem(-4).Overlay)</visible>
            <info>ListItem(-4).Overlay</info>
          </control>
          <include>genre_Showcase_ref_3</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>420</posx>
        <animation effect="rotatey" center="270" start="-55" end="-55" time="0" condition="true">Conditional</animation>
        <animation type="Conditional" condition="Skin.HasSetting(flattenshowcase)">
          <effect type="rotatey" center="270" start="0" end="55" time="800" tween="cubic" easing="inout" />
          <effect type="slide" start="0" end="-543" time="800" tween="cubic" easing="inout" />
        </animation>
        <control type="group">
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(-3).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(-3).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <include>genre_Showcase_4</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MovieShowcaseGlassOverlayAngled</include>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(-3).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(-3).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MovieShowcaseThumbReflectionDVD</include>
          </control>
          <control type="image">
            <include condition="!Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseNormal</include>
            <include condition="Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseDVD</include>
            <include>detailcolornofocus</include>
            <visible>!Skin.HasSetting(nomovieoverlays) + !IsEmpty(ListItem(-3).Overlay)</visible>
            <info>ListItem(-3).Overlay</info>
          </control>
          <include>genre_Showcase_ref_4</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>555</posx>
        <animation effect="rotatey" center="405" start="-55" end="-55" time="0" condition="true">Conditional</animation>
        <animation type="Conditional" condition="Skin.HasSetting(flattenshowcase)">
          <effect type="rotatey" center="405" start="0" end="55" time="800" tween="cubic" easing="inout" />
          <effect type="slide" start="0" end="-384" time="800" tween="cubic" easing="inout" />
        </animation>
        <control type="group">
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(-2).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(-2).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <include>genre_Showcase_5</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MovieShowcaseGlassOverlayAngled</include>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(-2).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(-2).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MovieShowcaseThumbReflectionDVD</include>
          </control>
          <control type="image">
            <include condition="!Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseNormal</include>
            <include condition="Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseDVD</include>
            <include>detailcolornofocus</include>
            <visible>!Skin.HasSetting(nomovieoverlays) + !IsEmpty(ListItem(-2).Overlay)</visible>
            <info>ListItem(-2).Overlay</info>
          </control>
          <include>genre_Showcase_ref_5</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>690</posx>
        <animation effect="rotatey" center="540" start="-55" end="-55" time="0" condition="true">Conditional</animation>
        <animation type="Conditional" condition="Skin.HasSetting(flattenshowcase)">
          <effect type="rotatey" center="540" start="0" end="55" time="800" tween="cubic" easing="inout" />
          <effect type="slide" start="0" end="-226" time="800" tween="cubic" easing="inout" />
        </animation>
        <control type="group">
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(-1).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(-1).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <include>genre_Showcase_6</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MovieShowcaseGlassOverlayAngled</include>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(-1).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(-1).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MovieShowcaseThumbReflectionDVD</include>
          </control>
          <control type="image">
            <include condition="!Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseNormal</include>
            <include condition="Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseDVD</include>
            <include>detailcolornofocus</include>
            <visible>!Skin.HasSetting(nomovieoverlays) + !IsEmpty(ListItem(-1).Overlay)</visible>
            <info>ListItem(-1).Overlay</info>
          </control>
          <include>genre_Showcase_ref_6</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>1500</posx>
        <animation effect="rotatey" center="2070" start="55" end="55" time="0" condition="true">Conditional</animation>
        <animation type="Conditional" condition="Skin.HasSetting(flattenshowcase)">
          <effect type="rotatey" center="2070" start="0" end="-55" time="800" tween="cubic" easing="inout" />
          <effect type="slide" start="0" end="1028" time="800" tween="cubic" easing="inout" />
        </animation>
        <control type="group">
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(6).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(6).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <include>genre_Showcase_13</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MovieShowcaseGlassOverlayAngled</include>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(6).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(6).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MovieShowcaseThumbReflectionDVD</include>
          </control>
          <control type="image">
            <include condition="!Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseNormal</include>
            <include condition="Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseDVD</include>
            <include>detailcolornofocus</include>
            <visible>!Skin.HasSetting(nomovieoverlays) + !IsEmpty(ListItem(6).Overlay)</visible>
            <info>ListItem(6).Overlay</info>
          </control>
          <include>genre_Showcase_ref_13</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>1365</posx>
        <animation effect="rotatey" center="1935" start="55" end="55" time="0" condition="true">Conditional</animation>
        <animation type="Conditional" condition="Skin.HasSetting(flattenshowcase)">
          <effect type="rotatey" center="1935" start="0" end="-55" time="800" tween="cubic" easing="inout" />
          <effect type="slide" start="0" end="866" time="800" tween="cubic" easing="inout" />
        </animation>
        <control type="group">
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(5).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(5).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <include>genre_Showcase_12</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MovieShowcaseGlassOverlayAngled</include>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(5).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(5).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MovieShowcaseThumbReflectionDVD</include>
          </control>
          <control type="image">
            <include condition="!Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseNormal</include>
            <include condition="Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseDVD</include>
            <include>detailcolornofocus</include>
            <visible>!Skin.HasSetting(nomovieoverlays) + !IsEmpty(ListItem(5).Overlay)</visible>
            <info>ListItem(5).Overlay</info>
          </control>
          <include>genre_Showcase_ref_12</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>1230</posx>
        <animation effect="rotatey" center="1800" start="55" end="55" time="0" condition="true">Conditional</animation>
        <animation type="Conditional" condition="Skin.HasSetting(flattenshowcase)">
          <effect type="rotatey" center="1800" start="0" end="-55" time="800" tween="cubic" easing="inout" />
          <effect type="slide" start="0" end="704" time="800" tween="cubic" easing="inout" />
        </animation>
        <control type="group">
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(4).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(4).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <include>genre_Showcase_11</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MovieShowcaseGlassOverlayAngled</include>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(4).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(4).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MovieShowcaseThumbReflectionDVD</include>
          </control>
          <control type="image">
            <include condition="!Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseNormal</include>
            <include condition="Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseDVD</include>
            <include>detailcolornofocus</include>
            <visible>!Skin.HasSetting(nomovieoverlays) + !IsEmpty(ListItem(4).Overlay)</visible>
            <info>ListItem(4).Overlay</info>
          </control>
          <include>genre_Showcase_ref_11</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>1095</posx>
        <animation effect="rotatey" center="1665" start="55" end="55" time="0" condition="true">Conditional</animation>
        <animation type="Conditional" condition="Skin.HasSetting(flattenshowcase)">
          <effect type="rotatey" center="1665" start="0" end="-55" time="800" tween="cubic" easing="inout" />
          <effect type="slide" start="0" end="543" time="800" tween="cubic" easing="inout" />
        </animation>
        <control type="group">
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(3).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(3).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <include>genre_Showcase_10</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MovieShowcaseGlassOverlayAngled</include>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(3).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(3).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MovieShowcaseThumbReflectionDVD</include>
          </control>
          <control type="image">
            <include condition="!Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseNormal</include>
            <include condition="Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseDVD</include>
            <include>detailcolornofocus</include>
            <visible>!Skin.HasSetting(nomovieoverlays) + !IsEmpty(ListItem(3).Overlay)</visible>
            <info>ListItem(3).Overlay</info>
          </control>
          <include>genre_Showcase_ref_10</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>960</posx>
        <animation effect="rotatey" center="1530" start="55" end="55" time="0" condition="true">Conditional</animation>
        <animation type="Conditional" condition="Skin.HasSetting(flattenshowcase)">
          <effect type="rotatey" center="1530" start="0" end="-55" time="800" tween="cubic" easing="inout" />
          <effect type="slide" start="0" end="384" time="800" tween="cubic" easing="inout" />
        </animation>
        <control type="group">
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(2).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(2).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <include>genre_Showcase_9</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MovieShowcaseGlassOverlayAngled</include>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(2).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(2).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MovieShowcaseThumbReflectionDVD</include>
          </control>
          <control type="image">
            <include condition="!Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseNormal</include>
            <include condition="Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseDVD</include>
            <include>detailcolornofocus</include>
            <visible>!Skin.HasSetting(nomovieoverlays) + !IsEmpty(ListItem(2).Overlay)</visible>
            <info>ListItem(2).Overlay</info>
          </control>
          <include>genre_Showcase_ref_9</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>825</posx>
        <animation effect="rotatey" center="1395" start="55" end="55" time="0" condition="true">Conditional</animation>
        <animation type="Conditional" condition="Skin.HasSetting(flattenshowcase)">
          <effect type="rotatey" center="1395" start="0" end="-55" time="800" tween="cubic" easing="inout" />
          <effect type="slide" start="0" end="226" time="800" tween="cubic" easing="inout" />
        </animation>
        <control type="group">
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(1).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumb</include>
            <info>Container(57).ListItem(1).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <include>genre_Showcase_8</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MovieShowcaseGlassOverlayAngled</include>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(1).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>Container(57).ListItem(1).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MovieShowcaseThumbReflectionDVD</include>
          </control>
          <control type="image">
            <include condition="!Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseNormal</include>
            <include condition="Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseDVD</include>
            <include>detailcolornofocus</include>
            <visible>!Skin.HasSetting(nomovieoverlays) + !IsEmpty(ListItem(1).Overlay)</visible>
            <info>ListItem(1).Overlay</info>
          </control>
          <include>genre_Showcase_ref_8</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
      <control type="group">
        <posx>758</posx>
        <control type="group">
          <control type="image">
            <include>MovieShowcaseThumbMain</include>
            <info>Container(57).ListItem(0).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbMain</include>
            <info>Container(57).ListItem(0).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <include>genre_Showcase_7</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MovieShowcaseGlassOverlay</include>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflectionMain</include>
            <info>Container(57).ListItem(0).Thumb</info>
            <visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflectionMain</include>
            <info>Container(57).ListItem(0).Thumb</info>
            <visible>[Container.Content(seasons) | Container.Content(episodes)] | Skin.HasSetting(alternativerender)</visible>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MovieShowcaseThumbReflectionDVDMain</include>
          </control>
          <control type="image">
            <include condition="!Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseNormal</include>
            <include condition="Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseDVD</include>
            <include>detailcolornofocus</include>
            <visible>!Skin.HasSetting(nomovieoverlays) + !IsEmpty(ListItem(0).Overlay)</visible>
            <info>ListItem(0).Overlay</info>
          </control>
          <include>genre_Showcase_ref_7</include>
          <!-- <<<<<< Add this -->
        </control>
      </control>
    </control>
  </include>
  <include name="Viewtype_Showcase">
    <include condition="Skin.HasSetting(videomovies)">ShowcaseInfoPaneMovies</include>
    <control type="group">
      <visible>Window.IsActive(28) | Window.IsActive(24) | [Window.IsActive(25) + !Container.Content(episodes)] | Window.IsActive(1)</visible>
      <include condition="Window.IsActive(1) | Window.IsActive(24) | Window.IsActive(25)">ShowcaseMovies</include>
      <include>Animation_HideShowcase</include>
    </control>
    <control type="group">
      <visible>Window.IsActive(20) | Window.IsActive(502) | Window.IsActive(501) | Window.IsActive(500) | Window.IsActive(2)</visible>
      <include condition="Window.IsActive(2) | Window.IsActive(500) | Window.IsActive(501) | Window.IsActive(502)">ShowcaseSquare</include>
      <include>Animation_HideShowcase</include>
    </control>
    <control type="button" id="70110">
      <posx>0</posx>
      <posy>0</posy>
      <width>0</width>
      <height>0</height>
      <texturefocus>-</texturefocus>
      <texturenofocus>-</texturenofocus>
      <onleft>57</onleft>
      <onright>57</onright>
      <onup>7000</onup>
      <ondown>57</ondown>
    </control>
    <control type="group">
      <visible>Control.IsVisible(57)</visible>
      <control type="wraplist" id="57">
        <viewtype label="Showcase">list</viewtype>
        <include condition="Window.IsActive(28) | Window.IsActive(24) | [Window.IsActive(25) + !Container.Content(episodes)] | Window.IsActive(1)">MovieShowcaseGroupVars</include>
        <include condition="Window.IsActive(500) | Window.IsActive(501) | Window.IsActive(502) | Window.IsActive(2) | Window.IsActive(20)">MusicShowcaseGroupVars</include>
        <onleft>57</onleft>
        <onright>57</onright>
        <include condition="[Skin.HasSetting(videomovies) + !Skin.HasSetting(showcaseinfotrigger)] | [Skin.HasSetting(videotv) + !Skin.HasSetting(showcasetvinfotrigger)]">ShowcaseInfoAutoUp</include>
        <include condition="[Skin.HasSetting(videomovies) + Skin.HasSetting(showcaseinfotrigger)] | [Skin.HasSetting(videotv) + Skin.HasSetting(showcasetvinfotrigger)]">ShowcaseInfoTriggerUp</include>
        <include condition="!Skin.HasSetting(showcasetrailer) + !Skin.HasSetting(showcasebigtrailer)">ShowcaseOnDown</include>
        <include condition="Skin.HasSetting(showcasetrailer) | Skin.HasSetting(showcasebigtrailer)">ShowcaseOnDownTrailer</include>
        <pagecontrol>60</pagecontrol>
        <orientation>horizontal</orientation>
        <scrolltime>250</scrolltime>
        <include>Animation_HideShowcase</include>
        <focusposition>3</focusposition>
        <visible>![Window.IsActive(25) + Skin.HasSetting(videotv)] | [Window.IsActive(25) + Skin.HasSetting(videotv) + Skin.HasSetting(unlockTVviews)]</visible>
        <preloaditems>2</preloaditems>
        <itemlayout height="525" width="294" condition="Window.IsActive(28) | Window.IsActive(24) | [Window.IsActive(25) + !Container.Content(episodes)] | Window.IsActive(1)">
          <control type="image">
            <include>MovieShowcaseThumbMain</include>
            <info>ListItem.Icon</info>
            <visible>!Skin.HasSetting(alternativerender) + Skin.HasSetting(flattenshowcase) + !Control.IsVisible(6000)</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbMain</include>
            <info>ListItem.Icon</info>
            <visible>Skin.HasSetting(alternativerender) + Skin.HasSetting(flattenshowcase) + !Control.IsVisible(6000)</visible>
          </control>
          <include>genre_Showcase_21</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MovieShowcaseGlassOverlay</include>
            <visible>!Skin.HasSetting(alternativerender) + Skin.HasSetting(flattenshowcase) + !Control.IsVisible(6000)</visible>
          </control>
          <control type="image">
            <description>Black overlay</description>
            <include>MovieShowcaseOverlay</include>
            <visible>!Skin.HasSetting(alternativerender) + Skin.HasSetting(flattenshowcase) + !Control.IsVisible(6000)</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>ListItem.Icon</info>
            <visible>!Skin.HasSetting(alternativerender) + Skin.HasSetting(flattenshowcase) + !Control.IsVisible(6000)</visible>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <info>ListItem.Icon</info>
            <visible>Skin.HasSetting(alternativerender) + Skin.HasSetting(flattenshowcase) + !Control.IsVisible(6000)</visible>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MovieShowcaseThumbReflectionDVD</include>
            <visible>!Skin.HasSetting(alternativerender) + Skin.HasSetting(flattenshowcase) + !Control.IsVisible(6000)</visible>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MovieShowcaseThumbReflectionDVD</include>
            <visible>Skin.HasSetting(alternativerender) + Skin.HasSetting(flattenshowcase) + !Control.IsVisible(6000)</visible>
          </control>
          <control type="image">
            <include condition="!Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseNormal</include>
            <include condition="Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseDVD</include>
            <include>detailcolornofocus</include>
            <visible>!Skin.HasSetting(nomovieoverlays) + !IsEmpty(ListItem(0).Overlay) + !Skin.HasSetting(alternativerender) + Skin.HasSetting(flattenshowcase) + !Control.IsVisible(6000)</visible>
            <info>ListItem(0).Overlay</info>
          </control>
          <control type="image">
            <include condition="!Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseNormal</include>
            <include condition="Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseDVD</include>
            <include>detailcolornofocus</include>
            <visible>!Skin.HasSetting(nomovieoverlays) + !IsEmpty(ListItem(0).Overlay) + Skin.HasSetting(alternativerender) + Skin.HasSetting(flattenshowcase) + !Control.IsVisible(6000)</visible>
            <info>ListItem(0).Overlay</info>
          </control>
          <include>genre_Showcase_ref_21</include>
          <!-- <<<<<< Add this -->
        </itemlayout>
        <focusedlayout height="525" width="294" condition="Window.IsActive(28) | Window.IsActive(24) | [Window.IsActive(25) + !Container.Content(episodes)] | Window.IsActive(1)">
          <control type="image">
            <include>MovieShowcaseThumbMain</include>
            <info>ListItem.Icon</info>
            <visible>!Skin.HasSetting(alternativerender) + Skin.HasSetting(flattenshowcase) + !Control.IsVisible(6000)</visible>
            <animation effect="zoom" start="100" end="110" center="135,120" time="400" easing="out" reversible="false" tween="cubic">Focus</animation>
            <animation effect="zoom" start="110" end="100" center="135,120" time="400" easing="out" reversible="false" tween="cubic" condition="!Control.HasFocus(57) + Skin.HasSetting(flattenshowcase)">Unfocus</animation>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbMain</include>
            <info>ListItem.Icon</info>
            <visible>Skin.HasSetting(alternativerender) + Skin.HasSetting(flattenshowcase) + !Control.IsVisible(6000)</visible>
            <animation effect="zoom" start="100" end="110" center="135,120" time="400" easing="out" reversible="false" tween="cubic">Focus</animation>
            <animation effect="zoom" start="110" end="100" center="135,120" time="400" easing="out" reversible="false" tween="cubic" condition="!Control.HasFocus(57) + Skin.HasSetting(flattenshowcase)">Unfocus</animation>
          </control>
          <include>genre_Showcase_20</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MovieShowcaseGlassOverlay</include>
            <visible>Skin.HasSetting(flattenshowcase) + !Control.IsVisible(6000)</visible>
            <animation effect="zoom" start="100" end="110" center="135,120" time="400" easing="out" reversible="false" tween="cubic">Focus</animation>
            <animation effect="zoom" start="110" end="100" center="135,120" time="400" easing="out" reversible="false" tween="cubic" condition="!Control.HasFocus(57) + Skin.HasSetting(flattenshowcase)">Unfocus</animation>
          </control>
          <control type="image">
            <description>Black overlay</description>
            <include>MovieShowcaseOverlay</include>
            <visible>Skin.HasSetting(flattenshowcase) + !Control.IsVisible(6000)</visible>
            <animation effect="zoom" start="100" end="110" center="135,120" time="400" easing="out" reversible="false" tween="cubic">Focus</animation>
            <animation effect="zoom" start="110" end="100" center="135,120" time="400" easing="out" reversible="false" tween="cubic" condition="!Control.HasFocus(57) + Skin.HasSetting(flattenshowcase)">Unfocus</animation>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflectionMain</include>
            <info>ListItem.Icon</info>
            <visible>!Skin.HasSetting(alternativerender) + Skin.HasSetting(flattenshowcase) + !Control.IsVisible(6000)</visible>
            <animation effect="zoom" start="100" end="110" center="135,120" time="400" easing="out" reversible="false" tween="cubic">Focus</animation>
            <animation effect="zoom" start="110" end="100" center="135,120" time="400" easing="out" reversible="false" tween="cubic" condition="!Control.HasFocus(57) + Skin.HasSetting(flattenshowcase)">Unfocus</animation>
          </control>
          <control type="image">
            <include>MovieShowcaseThumbReflectionMain</include>
            <info>ListItem.Icon</info>
            <visible>Skin.HasSetting(alternativerender) + Skin.HasSetting(flattenshowcase) + !Control.IsVisible(6000)</visible>
            <animation effect="zoom" start="100" end="110" center="135,120" time="400" easing="out" reversible="false" tween="cubic">Focus</animation>
            <animation effect="zoom" start="110" end="100" center="135,120" time="400" easing="out" reversible="false" tween="cubic" condition="!Control.HasFocus(57) + Skin.HasSetting(flattenshowcase)">Unfocus</animation>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MovieShowcaseThumbReflectionDVD</include>
            <visible>!Skin.HasSetting(alternativerender) + Skin.HasSetting(flattenshowcase) + !Control.IsVisible(6000)</visible>
            <animation effect="zoom" start="100" end="110" center="135,120" time="400" easing="out" reversible="false" tween="cubic">Focus</animation>
            <animation effect="zoom" start="110" end="100" center="135,120" time="400" easing="out" reversible="false" tween="cubic" condition="!Control.HasFocus(57) + Skin.HasSetting(flattenshowcase)">Unfocus</animation>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MovieShowcaseThumbReflectionDVD</include>
            <visible>Skin.HasSetting(alternativerender) + Skin.HasSetting(flattenshowcase) + !Control.IsVisible(6000)</visible>
            <animation effect="zoom" start="100" end="110" center="135,120" time="400" easing="out" reversible="false" tween="cubic">Focus</animation>
            <animation effect="zoom" start="110" end="100" center="135,120" time="400" easing="out" reversible="false" tween="cubic" condition="!Control.HasFocus(57) + Skin.HasSetting(flattenshowcase)">Unfocus</animation>
          </control>
          <control type="image">
            <include condition="!Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseNormal</include>
            <include condition="Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseDVD</include>
            <include>detailcolornofocus</include>
            <visible>!Skin.HasSetting(nomovieoverlays) + !IsEmpty(ListItem(0).Overlay) + !Skin.HasSetting(alternativerender) + Skin.HasSetting(flattenshowcase) + !Control.IsVisible(6000)</visible>
            <info>ListItem(0).Overlay</info>
            <animation effect="zoom" start="100" end="110" center="135,120" time="400" easing="out" reversible="false" tween="cubic">Focus</animation>
            <animation effect="zoom" start="110" end="100" center="135,120" time="400" easing="out" reversible="false" tween="cubic" condition="!Control.HasFocus(57) + Skin.HasSetting(flattenshowcase)">Unfocus</animation>
          </control>
          <control type="image">
            <include condition="!Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseNormal</include>
            <include condition="Skin.HasSetting(dvdcase)">WatchedOverlayShowCaseDVD</include>
            <include>detailcolornofocus</include>
            <visible>!Skin.HasSetting(nomovieoverlays) + !IsEmpty(ListItem(0).Overlay) + Skin.HasSetting(alternativerender) + Skin.HasSetting(flattenshowcase) + !Control.IsVisible(6000)</visible>
            <info>ListItem(0).Overlay</info>
            <animation effect="zoom" start="100" end="110" center="135,120" time="400" easing="out" reversible="false" tween="cubic">Focus</animation>
            <animation effect="zoom" start="110" end="100" center="135,120" time="400" easing="out" reversible="false" tween="cubic" condition="!Control.HasFocus(57) + Skin.HasSetting(flattenshowcase)">Unfocus</animation>
          </control>
          <include>genre_Showcase_ref_20</include>
          <!-- <<<<<< Add this -->
        </focusedlayout>
        <preloaditems>2</preloaditems>
        <itemlayout height="525" width="375" condition="Window.IsActive(500) | Window.IsActive(501) | Window.IsActive(502) | Window.IsActive(2) | Window.IsActive(20)">
          <control type="image">
            <include>MusicShowcaseThumbMain</include>
            <info>ListItem.Icon</info>
            <visible>[[Skin.HasSetting(flattenshowcase) + !Control.IsVisible(970)] | Container.Content(episodes)]</visible>
          </control>
          <include>genre_Showcase_23</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MusicShowcaseGlassOverlay</include>
            <visible>[[Skin.HasSetting(flattenshowcase) + !Control.IsVisible(970)] | Container.Content(episodes)]</visible>
          </control>
          <control type="image">
            <description>Black overlay</description>
            <include>MusicShowcaseOverlay</include>
            <visible>[[Skin.HasSetting(flattenshowcase) + !Control.IsVisible(970)] | Container.Content(episodes)]</visible>
          </control>
          <control type="image">
            <include>MusicShowcaseThumbReflection</include>
            <info>ListItem.Icon</info>
            <visible>[[Skin.HasSetting(flattenshowcase) + !Control.IsVisible(970)] | Container.Content(episodes)]</visible>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MusicShowcaseThumbReflectionCD</include>
            <visible>[[Skin.HasSetting(flattenshowcase) + !Control.IsVisible(970)] | Container.Content(episodes)]</visible>
          </control>
        </itemlayout>
        <focusedlayout height="525" width="375" condition="Window.IsActive(500) | Window.IsActive(501) | Window.IsActive(502) | Window.IsActive(2) | Window.IsActive(20)">
          <control type="image">
            <include>MusicShowcaseThumbMain</include>
            <info>ListItem.Icon</info>
            <visible>[[Skin.HasSetting(flattenshowcase) + !Control.IsVisible(970)] | Container.Content(episodes)]</visible>
            <animation effect="zoom" start="100" end="110" center="135,230" time="400" easing="out" reversible="false" tween="cubic">Focus</animation>
            <animation effect="zoom" start="110" end="100" center="135,230" time="400" easing="out" reversible="false" tween="cubic" condition="!Control.HasFocus(57) + [Skin.HasSetting(flattenshowcase) | Container.Content(episodes)]">Unfocus</animation>
          </control>
          <include>genre_Showcase_22</include>
          <!-- <<<<<< Add this -->
          <control type="image">
            <description>Glass overlay</description>
            <include>MusicShowcaseGlassOverlay</include>
            <visible>[[Skin.HasSetting(flattenshowcase) + !Control.IsVisible(970)] | Container.Content(episodes)]</visible>
            <animation effect="zoom" start="100" end="110" center="135,230" time="400" easing="out" reversible="false" tween="cubic">Focus</animation>
            <animation effect="zoom" start="110" end="100" center="135,230" time="400" easing="out" reversible="false" tween="cubic" condition="!Control.HasFocus(57) + [Skin.HasSetting(flattenshowcase) | Container.Content(episodes)]">Unfocus</animation>
          </control>
          <control type="image">
            <description>Black overlay</description>
            <include>MusicShowcaseOverlay</include>
            <visible>[[Skin.HasSetting(flattenshowcase) + !Control.IsVisible(970)] | Container.Content(episodes)]</visible>
            <animation effect="zoom" start="100" end="110" center="135,230" time="400" easing="out" reversible="false" tween="cubic">Focus</animation>
            <animation effect="zoom" start="110" end="100" center="135,230" time="400" easing="out" reversible="false" tween="cubic" condition="!Control.HasFocus(57) + [Skin.HasSetting(flattenshowcase) | Container.Content(episodes)]">Unfocus</animation>
          </control>
          <control type="image">
            <include>MusicShowcaseThumbReflection</include>
            <info>ListItem.Icon</info>
            <visible>[[Skin.HasSetting(flattenshowcase) + !Control.IsVisible(970)] | Container.Content(episodes)]</visible>
            <animation effect="zoom" start="100" end="110" center="135,230" time="400" easing="out" reversible="false" tween="cubic">Focus</animation>
            <animation effect="zoom" start="110" end="100" center="135,230" time="400" easing="out" reversible="false" tween="cubic" condition="!Control.HasFocus(57) + [Skin.HasSetting(flattenshowcase) | Container.Content(episodes)]">Unfocus</animation>
          </control>
          <control type="image">
            <description>Glass overlay reflection</description>
            <include>MusicShowcaseThumbReflectionCD</include>
            <visible>[[Skin.HasSetting(flattenshowcase) + !Control.IsVisible(970)] | Container.Content(episodes)]</visible>
            <animation effect="zoom" start="100" end="110" center="135,230" time="400" easing="out" reversible="false" tween="cubic">Focus</animation>
            <animation effect="zoom" start="110" end="100" center="135,230" time="400" easing="out" reversible="false" tween="cubic" condition="!Control.HasFocus(57) + [Skin.HasSetting(flattenshowcase) | Container.Content(episodes)]">Unfocus</animation>
          </control>
        </focusedlayout>
      </control>
      <control type="scrollbar" id="60">
        <description>My first scroll bar control</description>
        <posx>458</posx>
        <posy>994</posy>
        <width>1005</width>
        <height>62</height>
        <visible allowhiddenfocus="true">Control.IsVisible(57) + Control.HasFocus(60)</visible>
        <texturesliderbackground>windows/scrollbarbackshowcase.png</texturesliderbackground>
        <texturesliderbar>-</texturesliderbar>
        <texturesliderbarfocus>-</texturesliderbarfocus>
        <textureslidernib>windows/scrollbarnub-nofocus.png</textureslidernib>
        <textureslidernibfocus>windows/scrollbarnub-focus.png</textureslidernibfocus>
        <pulseonselect />
        <orientation>horizontal</orientation>
        <showonepage>false</showonepage>
        <onup>57</onup>
        <ondown>70197</ondown>
        <onleft>60</onleft>
        <onright>60</onright>
        <include>Animation_HideShowcase</include>
        <include>Animation_CommonFade</include>
      </control>
      <control type="button" id="70197">
        <posx>0</posx>
        <posy>0</posy>
        <width>0</width>
        <height>0</height>
        <texturefocus>-</texturefocus>
        <texturenofocus>-</texturenofocus>
        <onleft>57</onleft>
        <onright>57</onright>
        <onup>57</onup>
        <ondown>57</ondown>
      </control>
      <control type="group">
        <visible>Control.IsVisible(57)</visible>
        <include>Animation_HideShowcase</include>
        <control type="fadelabel">
          <label>31609</label>
          <label>31610</label>
          <scrollout>false</scrollout>
          <pauseatend>3000</pauseatend>
          <scroll>false</scroll>
          <include>ShowcaseMainLabel</include>
          <visible>Window.IsActive(25) + Control.IsVisible(57) + stringcompare(container(57).numitems,0)</visible>
        </control>
        <control type="fadelabel">
          <label>31609</label>
          <label>31611</label>
          <scrollout>false</scrollout>
          <pauseatend>3000</pauseatend>
          <scroll>false</scroll>
          <include>ShowcaseMainLabel</include>
          <visible>Window.IsActive(502) + Control.IsVisible(57) + stringcompare(container(57).numitems,0)</visible>
        </control>
        <control type="label">
          <label>[UPPERCASE]$INFO[ListItem.Label][/UPPERCASE]</label>
          <include>ShowcaseMainLabel</include>
          <visible>Container.Content(movies) + !Skin.HasSetting(nomediaflags) + !Window.IsActive(24)</visible>
        </control>
        <control type="label">
          <label>[UPPERCASE]$INFO[ListItem.Label][/UPPERCASE]</label>
          <include>ShowcaseMainLabelWide</include>
          <visible>[!Container.Content(movies) | Window.IsActive(24)] | [Container.Content(movies) + Skin.HasSetting(nomediaflags)]</visible>
        </control>
        <control type="label">
          <label>[UPPERCASE]$INFO[Container.NumItems] $LOCALIZE[31005][/UPPERCASE]</label>
          <include>ShowcaseItemsLabel</include>
        </control>
        <control type="label" id="72">
          <label>[UPPERCASE]$INFO[ListItem.Genre][/UPPERCASE]</label>
          <include>ShowcaseDetailLabel</include>
          <visible>Container.Content(movies) + !IsEmpty(ListItem.Genre)</visible>
        </control>
        <control type="label" id="72">
          <label>$INFO[ListItem.Album,, -] $INFO[ListItem.Artist]</label>
          <include>ShowcaseDetailLabel</include>
          <visible>Container.Content(songs)</visible>
        </control>
        <control type="label" id="72">
          <info>ListItem.Label2</info>
          <include>ShowcaseDetailLabel</include>
          <visible>Window.IsActive(1) | Container.Content(albums) | Window.IsActive(501)</visible>
        </control>
        <control type="label" id="72">
          <label>[UPPERCASE]$INFO[ListItem.Episode] $LOCALIZE[31406][/UPPERCASE]</label>
          <include>ShowcaseDetailLabel</include>
          <visible>[Container.Content(tvshows)] + !IsEmpty(ListItem.Episode)</visible>
        </control>
        <control type="label" id="72">
          <label>[UPPERCASE]$LOCALIZE[31432] $INFO[ListItem.Season], $LOCALIZE[31433] $INFO[ListItem.Episode][/UPPERCASE]</label>
          <include>ShowcaseDetailLabel</include>
          <visible>Container.Content(episodes) + !IsEmpty(ListItem.Episode)</visible>
        </control>
        <control type="label" id="72">
          <info>ListItem.PictureResolution</info>
          <include>ShowcaseDetailLabel</include>
          <visible>Window.IsActive(2) + !IsEmpty(ListItem.PictureResolution)</visible>
        </control>
      </control>
    </control>
    <control type="group">
      <include>ShowcaseVisible</include>
    </control>
  </include>
</includes>