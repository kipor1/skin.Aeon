<includes>
  <include name="VerticalWall">
    <onleft>2</onleft>
    <onright>2</onright>
    <onup>53</onup>
    <ondown>53</ondown>
    <orientation>vertical</orientation>
  </include>
  <include name="HorizontalWall">
    <onleft>53</onleft>
    <onright>53</onright>
    <onup>2</onup>
    <ondown>2</ondown>
    <orientation>horizontal</orientation>
  </include>
  <include name="Furniture_WallBackground">
    <control type="image">
      <include>FullscreenDimensions</include>
      <texture>common/black.png</texture>
      <aspectratio scalediffuse="false">scale</aspectratio>
      <visible>Control.IsVisible(53) + Window.IsActive(25) + !Skin.HasSetting(newwall) + !Skin.HasSetting(transparentwall)</visible>
      <animation effect="fade" start="0" end="100" time="200">Visible</animation>
      <animation effect="fade" start="100" end="0" time="200">Hidden</animation>
    </control>
    <control type="group">
      <control type="image">
        <include>FullscreenDimensions</include>
        <texture>wall/wall_background.png</texture>
        <visible>[Control.IsVisible(53) + !Skin.HasSetting(smallmoviewall)] + !Skin.HasSetting(transparentwall)</visible>
        <include>Animation_WindowFade200</include>
      </control>
      <control type="image">
        <include>FullscreenDimensions</include>
        <texture>wall/wall_background.png</texture>
        <colordiffuse>cc999999</colordiffuse>
        <!--TWEAK-->
        <visible>[Control.IsVisible(53) + !Skin.HasSetting(smallmoviewall)] + Skin.HasSetting(transparentwall) + !Skin.HasSetting(newwall)</visible>
        <include>Animation_WindowFade200</include>
      </control>
    </control>
    <control type="group">
      <control type="image">
        <include>FullscreenDimensions</include>
        <texture>wall/wall_background_small.png</texture>
        <visible>Control.IsVisible(53) + Skin.HasSetting(smallmoviewall) + Window.IsActive(25) + !Skin.HasSetting(transparentwall)</visible>
        <include>Animation_WindowFade200</include>
      </control>
      <control type="image">
        <include>FullscreenDimensions</include>
        <texture>wall/wall_background_small.png</texture>
        <colordiffuse>cc999999</colordiffuse>
        <!--TWEAK-->
        <visible>Control.IsVisible(53) + Skin.HasSetting(smallmoviewall) + Window.IsActive(25) + Skin.HasSetting(transparentwall) + !Skin.HasSetting(newwall)</visible>
        <include>Animation_WindowFade200</include>
      </control>
    </control>
    <control type="image">
      <posx>172</posx>
      <posy>153</posy>
      <width>1576</width>
      <height>774</height>
      <texture>wall/wall_squares.png</texture>
      <visible>!Control.IsVisible(217) + !Skin.HasSetting(smallmusicwall) + Control.IsVisible(53) + [Window.IsActive(20) | Window.IsActive(2) | Window.IsActive(500) | Window.IsActive(501) | Window.IsActive(502) | Container.Content(episodes)]</visible>
      <include>Animation_CommonFade</include>
    </control>
    <control type="image">
      <posx>147</posx>
      <posy>159</posy>
      <width>1628</width>
      <height>764</height>
      <texture>wall/wall_movie_squares.png</texture>
      <visible>!Control.IsVisible(217) + !Skin.HasSetting(smallmoviewall) + Control.IsVisible(53) + [Window.IsActive(1) | Window.IsActive(28) | Window.IsActive(24) | [Window.IsActive(25) + !Container.Content(episodes)]]</visible>
      <include>Animation_CommonFade</include>
    </control>
    <control type="image">
      <posx>177</posx>
      <posy>153</posy>
      <width>1566</width>
      <height>772</height>
      <texture>wall/wall_squares_small.png</texture>
      <visible>Skin.HasSetting(smallmusicwall) + Control.IsVisible(53) + [Window.IsActive(20) | Window.IsActive(2) | Window.IsActive(500) | Window.IsActive(501) | Window.IsActive(502) | Container.Content(episodes)]</visible>
      <include>Animation_CommonFade</include>
    </control>
    <control type="image">
      <posx>141</posx>
      <posy>116</posy>
      <width>1640</width>
      <height>848</height>
      <texture>wall/wall_movie_squares_small.png</texture>
      <visible>Skin.HasSetting(smallmoviewall) + Control.IsVisible(53) + [Window.IsActive(1) | Window.IsActive(28) | Window.IsActive(24) | [Window.IsActive(25) + !Container.Content(episodes)]]</visible>
      <include>Animation_CommonFade</include>
    </control>
  </include>
  <include name="Furniture_WallVignette">
    <control type="image">
      <include>FullscreenDimensions</include>
      <texture>wall/wall_vignette.png</texture>
      <visible>Control.IsVisible(53)</visible>
    </control>
  </include>
  <include name="WallIconDimensions">
    <posx>4</posx>
    <posy>4</posy>
    <width>192</width>
    <height>192</height>
  </include>
  <include name="WallIconDimensionsSmall">
    <posx>4</posx>
    <posy>4</posy>
    <width>153</width>
    <height>153</height>
  </include>
  <include name="WallIconMovieDimensions">
    <posx>4</posx>
    <posy>4</posy>
    <width>177</width>
    <height>261</height>
  </include>
  <include name="WallIconMovieDimensionsSmall">
    <posx>4</posx>
    <posy>4</posy>
    <width>146</width>
    <height>213</height>
  </include>
  <include name="WallLabelVars">
    <posx>0</posx>
    <posy>0</posy>
    <width>660</width>
    <height>30</height>
    <font>Font_WallLabelMain</font>
    <include>Animation_CommonFadeIn</include>
  </include>
  <include name="WallWidthBig">
    <posx>162</posx>
    <width>1600</width>
  </include>
  <include name="WallWidthSmall">
    <posx>162</posx>
    <width>1590</width>
  </include>
  <include name="MovieWallBig">
    <posx>128</posx>
    <posy>136</posy>
    <width>1662</width>
    <height>808</height>
  </include>
  <include name="MovieWallSmall">
    <posx>124</posx>
    <posy>99</posy>
    <width>1670</width>
    <height>878</height>
  </include>
  <include name="MusicWall">
    <control type="panel" id="53">
      <viewtype label="31750">icon</viewtype>
      <include condition="!Skin.HasSetting(smallmusicwall)">WallWidthBig</include>
      <include condition="Skin.HasSetting(smallmusicwall)">WallWidthSmall</include>
      <posy>140</posy>
      <height>798</height>
      <pagecontrol>61</pagecontrol>
      <scrolltime>200</scrolltime>
      <include condition="Skin.HasSetting(VerticalWall)">VerticalWall</include>
      <include condition="!Skin.HasSetting(VerticalWall)">HorizontalWall</include>
      <visible>Window.IsActive(20) | Window.IsActive(2) | Window.IsActive(500) | Window.IsActive(501) | Window.IsActive(502)</visible>
      <itemlayout width="200" height="200" condition="!Skin.HasSetting(smallmusicwall)">
        <control type="image">
          <include>WallIconDimensions</include>
          <texture diffuse="wall/wall_mask.png">defaultaudio.png</texture>
          <aspectratio scalediffuse="false">scale</aspectratio>
          <visible>Window.IsActive(500) | Window.IsActive(501) | Window.IsActive(502) | Container.Content(episodes)</visible>
        </control>
        <control type="image">
          <include>WallIconDimensions</include>
          <texture diffuse="wall/wall_mask.png">defaultpicture.png</texture>
          <aspectratio scalediffuse="false">scale</aspectratio>
          <visible>Window.IsActive(2)</visible>
        </control>
        <control type="image">
          <include>WallIconDimensions</include>
          <texture background="true" diffuse="wall/wall_mask.png">defaultpicture.png</texture>
          <aspectratio scalediffuse="false">scale</aspectratio>
          <info>ListItem.Icon</info>
          <fadetime>500</fadetime>
          <visible>Window.IsActive(2)</visible>
        </control>
        <control type="image">
          <include>WallIconDimensions</include>
          <texture background="true" diffuse="wall/wall_mask.png">defaultaudio.png</texture>
          <aspectratio scalediffuse="false">scale</aspectratio>
          <info>ListItem.Icon</info>
          <fadetime>500</fadetime>
          <visible>Window.IsActive(500) | Window.IsActive(501) | Window.IsActive(502) | Container.Content(episodes)</visible>
        </control>
        <control type="image">
          <include>WallIconDimensions</include>
          <bordertexture border="-3">wall/wall_nfborder.png</bordertexture>
          <texture>wall/wall_nfoverlay.png</texture>
        </control>
      </itemlayout>
      <focusedlayout width="200" height="200" condition="!Skin.HasSetting(smallmusicwall)">
        <control type="image">
          <include>WallIconDimensions</include>
          <texture diffuse="wall/wall_mask.png">defaultaudio.png</texture>
          <aspectratio scalediffuse="false">scale</aspectratio>
          <visible>Window.IsActive(500) | Window.IsActive(501) | Window.IsActive(502) | Container.Content(episodes)</visible>
          <animation effect="zoom" center="66,90" start="100" end="190" time="400" easing="out" tween="cubic" reversible="false">Focus</animation>
        </control>
        <control type="image">
          <include>WallIconDimensions</include>
          <texture diffuse="wall/wall_mask.png">defaultpicture.png</texture>
          <aspectratio scalediffuse="false">scale</aspectratio>
          <visible>Window.IsActive(2)</visible>
          <animation effect="zoom" center="66,90" start="100" end="190" time="400" easing="out" tween="cubic" reversible="false">Focus</animation>
        </control>
        <control type="image">
          <include>WallIconDimensions</include>
          <texture background="true" diffuse="wall/wall_mask.png">defaultaudio.png</texture>
          <aspectratio scalediffuse="false">scale</aspectratio>
          <info>ListItem.Icon</info>
          <fadetime>500</fadetime>
          <visible>Window.IsActive(500) | Window.IsActive(501) | Window.IsActive(502) | Container.Content(episodes)</visible>
          <animation effect="zoom" center="66,90" start="100" end="190" time="400" easing="out" tween="cubic" reversible="false">Focus</animation>
        </control>
        <control type="image">
          <include>WallIconDimensions</include>
          <texture background="true" diffuse="wall/wall_mask.png">defaultpicture.png</texture>
          <aspectratio scalediffuse="false">scale</aspectratio>
          <info>ListItem.Icon</info>
          <fadetime>500</fadetime>
          <visible>Window.IsActive(2)</visible>
          <animation effect="zoom" center="66,90" start="100" end="190" time="400" easing="out" tween="cubic" reversible="false">Focus</animation>
        </control>
        <control type="image">
          <include>WallIconDimensions</include>
          <bordertexture border="-3">wall/wall_nfborder.png</bordertexture>
          <texture>wall/wall_nfoverlay.png</texture>
          <animation type="Focus" reversible="false">
            <!--<effect type="fade" start="100" end="0" time="200" reversible="false" />-->
            <!--REENABLED GLOSS OVERLAY FOR FOCUSED-->
            <effect type="zoom" center="66,90" start="100" end="190" time="400" easing="out" tween="cubic" reversible="false" />
          </animation>
        </control>
        <control type="image">
          <include>WallIconDimensions</include>
          <bordertexture border="-8">wall/wall_fborder.png</bordertexture>
          <texture>common/blank.png</texture>
          <animation type="Focus" reversible="false">
            <effect type="fade" start="0" end="100" time="400" reversible="false" />
            <effect type="zoom" center="66,90" start="100" end="190" time="400" easing="out" tween="cubic" reversible="false" />
          </animation>
        </control>
      </focusedlayout>
      <itemlayout width="159" height="159" condition="Skin.HasSetting(smallmusicwall)">
        <control type="image">
          <include>WallIconDimensionsSmall</include>
          <texture diffuse="wall/wall_mask.png">defaultpicture.png</texture>
          <aspectratio scalediffuse="false">scale</aspectratio>
          <visible>Window.IsActive(2)</visible>
        </control>
        <control type="image">
          <include>WallIconDimensionsSmall</include>
          <texture diffuse="wall/wall_mask.png">defaultaudio.png</texture>
          <aspectratio scalediffuse="false">scale</aspectratio>
          <visible>Window.IsActive(500) | Window.IsActive(501) | Window.IsActive(502) | Container.Content(episodes)</visible>
        </control>
        <control type="image">
          <include>WallIconDimensionsSmall</include>
          <texture background="true" diffuse="wall/wall_mask.png">defaultpicture.png</texture>
          <aspectratio scalediffuse="false">scale</aspectratio>
          <info>ListItem.Icon</info>
          <fadetime>500</fadetime>
          <visible>Window.IsActive(2)</visible>
        </control>
        <control type="image">
          <include>WallIconDimensionsSmall</include>
          <texture background="true" diffuse="wall/wall_mask.png">defaultaudio.png</texture>
          <aspectratio scalediffuse="false">scale</aspectratio>
          <info>ListItem.Icon</info>
          <fadetime>500</fadetime>
          <visible>Window.IsActive(500) | Window.IsActive(501) | Window.IsActive(502) | Container.Content(episodes)</visible>
        </control>
        <control type="image">
          <include>WallIconDimensionsSmall</include>
          <bordertexture border="-3">wall/wall_nfborder.png</bordertexture>
          <texture>wall/wall_nfoverlay.png</texture>
        </control>
      </itemlayout>
      <focusedlayout width="159" height="159" condition="Skin.HasSetting(smallmusicwall)">
        <control type="image">
          <include>WallIconDimensionsSmall</include>
          <texture diffuse="wall/wall_mask.png">defaultaudio.png</texture>
          <aspectratio scalediffuse="false">scale</aspectratio>
          <visible>Window.IsActive(500) | Window.IsActive(501) | Window.IsActive(502) | Container.Content(episodes)</visible>
          <animation effect="zoom" center="51,60" start="100" end="190" time="400" easing="out" tween="cubic" reversible="false">Focus</animation>
        </control>
        <control type="image">
          <include>WallIconDimensionsSmall</include>
          <texture diffuse="wall/wall_mask.png">defaultpicture.png</texture>
          <aspectratio scalediffuse="false">scale</aspectratio>
          <visible>Window.IsActive(2)</visible>
          <animation effect="zoom" center="51,60" start="100" end="190" time="400" easing="out" tween="cubic" reversible="false">Focus</animation>
        </control>
        <control type="image">
          <include>WallIconDimensionsSmall</include>
          <texture background="true" diffuse="wall/wall_mask.png">defaultaudio.png</texture>
          <aspectratio scalediffuse="false">scale</aspectratio>
          <info>ListItem.Icon</info>
          <fadetime>500</fadetime>
          <visible>Window.IsActive(500) | Window.IsActive(501) | Window.IsActive(502) | Container.Content(episodes)</visible>
          <animation effect="zoom" center="51,60" start="100" end="190" time="400" easing="out" tween="cubic" reversible="false">Focus</animation>
        </control>
        <control type="image">
          <include>WallIconDimensionsSmall</include>
          <texture background="true" diffuse="wall/wall_mask.png">defaultpicture.png</texture>
          <aspectratio scalediffuse="false">scale</aspectratio>
          <info>ListItem.Icon</info>
          <fadetime>500</fadetime>
          <visible>Window.IsActive(2)</visible>
          <animation effect="zoom" center="51,60" start="100" end="190" time="400" easing="out" tween="cubic" reversible="false">Focus</animation>
        </control>
        <control type="image">
          <include>WallIconDimensionsSmall</include>
          <bordertexture border="-3">wall/wall_nfborder.png</bordertexture>
          <texture>wall/wall_nfoverlay.png</texture>
          <animation type="Focus" reversible="false">
            <!--<effect type="fade" start="100" end="0" time="200" reversible="false" />-->
            <!--REENABLED GLOSS OVERLAY FOR FOCUSED-->
            <effect type="zoom" center="51,60" start="100" end="190" time="400" easing="out" tween="cubic" reversible="false" />
          </animation>
        </control>
        <control type="image">
          <include>WallIconDimensionsSmall</include>
          <bordertexture border="-5">wall/wall_fborder.png</bordertexture>
          <texture>common/blank.png</texture>
          <animation type="Focus" reversible="false">
            <effect type="fade" start="0" end="100" time="400" reversible="false" />
            <effect type="zoom" center="51,60" start="100" end="190" time="400" easing="out" tween="cubic" reversible="false" />
          </animation>
        </control>
      </focusedlayout>
    </control>
  </include>
  <include name="MovieWall">
    <control type="panel" id="53">
      <viewtype label="Wall">icon</viewtype>
      <include condition="!Skin.HasSetting(smallmoviewall)">MovieWallBig</include>
      <include condition="Skin.HasSetting(smallmoviewall)">MovieWallSmall</include>
      <pagecontrol>61</pagecontrol>
      <scrolltime>200</scrolltime>
      <include condition="Skin.HasSetting(VerticalWall)">VerticalWall</include>
      <include condition="!Skin.HasSetting(VerticalWall)">HorizontalWall</include>
      <visible>Window.IsActive(28) | Window.IsActive(1) | Window.IsActive(24) | Window.IsActive(25)</visible>
      <itemlayout width="184" height="268" condition="!Skin.HasSetting(smallmoviewall)">
        <include condition="!Skin.HasSetting(dvdcase)">WallIconNormal</include>
        <include condition="Skin.HasSetting(dvdcase)">WallIconDVDFocus</include>
        <control type="image">
          <include>WatchedOverlayWall</include>
          <include>detailcolornofocus</include>
          <visible>!Skin.HasSetting(nomovieoverlays) + !IsEmpty(ListItem.Overlay) + Skin.HasSetting(videomovies)</visible>
          <info>ListItem.Overlay</info>
        </control>
        <control type="image">
          <include>WatchedOverlayWall</include>
          <include>detailcolornofocus</include>
          <visible>!Skin.HasSetting(notvoverlays) + !IsEmpty(ListItem.Overlay) + Skin.HasSetting(videotv)</visible>
          <info>ListItem.Overlay</info>
        </control>
      </itemlayout>
      <focusedlayout width="184" height="268" condition="!Skin.HasSetting(smallmoviewall)">
        <include condition="!Skin.HasSetting(dvdcase)">WallIconNormalFocus</include>
        <include condition="Skin.HasSetting(dvdcase)">WallIconDVDFocus</include>
        <control type="image">
          <include>WatchedOverlayWall</include>
          <include>detailcolornofocus</include>
          <visible>!Skin.HasSetting(nomovieoverlays) + !IsEmpty(ListItem.Overlay) + Skin.HasSetting(videomovies)</visible>
          <info>ListItem.Overlay</info>
          <include condition="!Skin.HasSetting(dvdcase)">WallIconZoomAnimation</include>
          <include condition="Skin.HasSetting(dvdcase)">WallIconZoomAnimationDVD</include>
        </control>
        <control type="image">
          <include>WatchedOverlayWall</include>
          <include>detailcolornofocus</include>
          <visible>!Skin.HasSetting(notvoverlays) + !IsEmpty(ListItem.Overlay) + Skin.HasSetting(videotv)</visible>
          <info>ListItem.Overlay</info>
          <include condition="!Skin.HasSetting(dvdcase)">WallIconZoomAnimation</include>
          <include condition="Skin.HasSetting(dvdcase)">WallIconZoomAnimationDVD</include>
        </control>
      </focusedlayout>
      <itemlayout width="152" height="219" condition="Skin.HasSetting(smallmoviewall)">
        <include condition="!Skin.HasSetting(dvdcase)">WallIconNormal</include>
        <include condition="Skin.HasSetting(dvdcase)">WallIconDVDFocus</include>
        <control type="image">
          <include>WatchedOverlayWallSmall</include>
          <include>detailcolornofocus</include>
          <visible>!Skin.HasSetting(nomovieoverlays) + !IsEmpty(ListItem.Overlay) + Skin.HasSetting(videomovies)</visible>
          <info>ListItem.Overlay</info>
        </control>
        <control type="image">
          <include>WatchedOverlayWallSmall</include>
          <include>detailcolornofocus</include>
          <visible>!Skin.HasSetting(notvoverlays) + !IsEmpty(ListItem.Overlay) + Skin.HasSetting(videotv)</visible>
          <info>ListItem.Overlay</info>
        </control>
      </itemlayout>
      <focusedlayout width="152" height="219" condition="Skin.HasSetting(smallmoviewall)">
        <include condition="!Skin.HasSetting(dvdcase)">WallIconNormalFocus</include>
        <include condition="Skin.HasSetting(dvdcase)">WallIconDVDFocus</include>
        <control type="image">
          <include>WatchedOverlayWallSmall</include>
          <include>detailcolornofocus</include>
          <visible>!Skin.HasSetting(nomovieoverlays) + !IsEmpty(ListItem.Overlay) + Skin.HasSetting(videomovies)</visible>
          <info>ListItem.Overlay</info>
          <include condition="!Skin.HasSetting(dvdcase)">WallIconZoomAnimationSmall</include>
          <include condition="Skin.HasSetting(dvdcase)">WallIconZoomAnimationDVDSmall</include>
        </control>
        <control type="image">
          <include>WatchedOverlayWallSmall</include>
          <include>detailcolornofocus</include>
          <visible>!Skin.HasSetting(notvoverlays) + !IsEmpty(ListItem.Overlay) + Skin.HasSetting(videotv)</visible>
          <info>ListItem.Overlay</info>
          <include condition="!Skin.HasSetting(dvdcase)">WallIconZoomAnimationSmall</include>
          <include condition="Skin.HasSetting(dvdcase)">WallIconZoomAnimationDVDSmall</include>
        </control>
      </focusedlayout>
    </control>
  </include>
  <include name="Viewtype_Wall">
    <include condition="Window.IsActive(20) | Window.IsActive(2) | Window.IsActive(500) | Window.IsActive(501) | Window.IsActive(502)">MusicWall</include>
    <include condition="Window.IsActive(28) | Window.IsActive(1) | Window.IsActive(24) | Window.IsActive(25)">MovieWall</include>
    <control type="image">
      <posx>86</posx>
      <posy>147</posy>
      <width>30</width>
      <height>786</height>
      <texture>wall/wall_arrow.png</texture>
      <visible>Control.IsVisible(53) + !Skin.HasSetting(VerticalWall)</visible>
      <animation effect="slide" start="-150" end="0" delay="800" time="400" easing="out" tween="cubic">WindowOpen</animation>
      <animation effect="fade" start="100" end="0" time="400" condition="Container(53).Column(0) + !ControlGroup(7000).HasFocus()">Conditional</animation>
      <animation effect="slide" start="27" end="27" time="0" condition="Window.IsActive(2) | Window.IsActive(501) | Window.IsActive(502)">Conditional</animation>
    </control>
    <control type="image">
      <posx>1804</posx>
      <posy>147</posy>
      <width>30</width>
      <height>786</height>
      <texture flipx="true">wall/wall_arrow.png</texture>
      <visible>Control.IsVisible(53) + !Skin.HasSetting(VerticalWall)</visible>
      <animation effect="slide" start="150" end="0" delay="800" time="400" easing="out" tween="cubic">WindowOpen</animation>
      <animation effect="fade" start="100" end="0" time="400" condition="[[Window.IsActive(2) | Window.IsActive(501) | Window.IsActive(502)] + Container(53).Column(7)] | [[Window.IsActive(1) | Window.IsActive(24) | Window.IsActive(25)] + Container(53).Column(8)] + !ControlGroup(7000).HasFocus()">Conditional</animation>
      <animation effect="slide" start="-27" end="-27" time="0" condition="Window.IsActive(2) | Window.IsActive(501) | Window.IsActive(502)">Conditional</animation>
    </control>
    <!--Music Wall-->
    <control type="image">
      <posx>132</posx>
      <posy>105</posy>
      <width>1650</width>
      <height>30</height>
      <texture>wall/wall_arrow_vertical.png</texture>
      <visible>Control.IsVisible(53) + [Window.IsActive(2) | Window.IsActive(501) | Window.IsActive(502)] + Skin.HasSetting(VerticalWall)</visible>
      <animation effect="slide" start="-150" end="0" delay="800" time="400" easing="out" tween="cubic">WindowOpen</animation>
      <animation effect="fade" start="100" end="0" time="125" condition="Container(53).Row(0) + !ControlGroup(7000).HasFocus()">Conditional</animation>
      <animation effect="slide" start="0" end="0" time="0" condition="Window.IsActive(2) | Window.IsActive(501) | Window.IsActive(502)">Conditional</animation>
    </control>
    <control type="image">
      <posx>132</posx>
      <posy>945</posy>
      <width>1650</width>
      <height>30</height>
      <texture flipy="true">wall/wall_arrow_vertical.png</texture>
      <visible>Control.IsVisible(53) + [Window.IsActive(2) | Window.IsActive(501) | Window.IsActive(502)] + Skin.HasSetting(VerticalWall)</visible>
      <animation effect="slide" start="150" end="0" delay="800" time="400" easing="out" tween="cubic">WindowOpen</animation>
      <animation effect="fade" start="100" end="0" time="125" condition="[[Window.IsActive(2) | Window.IsActive(501) | Window.IsActive(502)] + [[Container(53).Row(3) + !Skin.HasSetting(smallmusicwall)] | [Container(53).Row(4) + Skin.HasSetting(smallmusicwall)]]] + !ControlGroup(7000).HasFocus()">Conditional</animation>
      <animation effect="slide" start="0" end="0" time="0" condition="Window.IsActive(2) | Window.IsActive(501) | Window.IsActive(502)">Conditional</animation>
    </control>
    <!--Movie Wall - Grid: Default-->
    <control type="image">
      <posx>-15</posx>
      <posy>105</posy>
      <width>1950</width>
      <height>30</height>
      <texture>wall/wall_arrow_vertical.png</texture>
      <visible>Control.IsVisible(53) + Window.IsActive(25) + Skin.HasSetting(VerticalWall) + !Skin.HasSetting(smallmoviewall)</visible>
      <animation effect="slide" start="-150" end="0" delay="800" time="400" easing="out" tween="cubic">WindowOpen</animation>
      <animation effect="fade" start="100" end="0" time="125" condition="Container(53).Row(0) + !ControlGroup(7000).HasFocus()">Conditional</animation>
      <animation effect="slide" start="27" end="27" time="0" condition="Window.IsActive(2) | Window.IsActive(501) | Window.IsActive(502)">Conditional</animation>
    </control>
    <control type="image">
      <posx>-15</posx>
      <posy>945</posy>
      <width>1950</width>
      <height>30</height>
      <texture flipy="true">wall/wall_arrow_vertical.png</texture>
      <visible>Control.IsVisible(53) + Window.IsActive(25) + Skin.HasSetting(VerticalWall) + !Skin.HasSetting(smallmoviewall)</visible>
      <animation effect="slide" start="150" end="0" delay="800" time="400" easing="out" tween="cubic">WindowOpen</animation>
      <animation effect="fade" start="100" end="0" time="125" condition="[[Window.IsActive(1) | Window.IsActive(24) | Window.IsActive(25)] + Container(53).Row(2)] + !ControlGroup(7000).HasFocus()">Conditional</animation>
      <animation effect="slide" start="0" end="0" time="0" condition="Window.IsActive(2) | Window.IsActive(501) | Window.IsActive(502)">Conditional</animation>
    </control>
    <!--Movie Wall - Grid: Max-->
    <control type="image">
      <posx>-15</posx>
      <posy>76</posy>
      <width>1950</width>
      <height>30</height>
      <texture>wall/wall_arrow_vertical.png</texture>
      <visible>Control.IsVisible(53) + Window.IsActive(25) + Skin.HasSetting(VerticalWall) + Skin.HasSetting(smallmoviewall)</visible>
      <animation effect="slide" start="-150" end="0" delay="800" time="400" easing="out" tween="cubic">WindowOpen</animation>
      <animation effect="fade" start="100" end="0" time="125" condition="Container(53).Row(0) + !ControlGroup(7000).HasFocus()">Conditional</animation>
      <animation effect="slide" start="27" end="27" time="0" condition="Window.IsActive(2) | Window.IsActive(501) | Window.IsActive(502)">Conditional</animation>
    </control>
    <control type="image">
      <posx>-15</posx>
      <posy>968</posy>
      <width>1950</width>
      <height>30</height>
      <texture flipy="true">wall/wall_arrow_vertical.png</texture>
      <visible>Control.IsVisible(53) + Window.IsActive(25) + Skin.HasSetting(VerticalWall) + Skin.HasSetting(smallmoviewall)</visible>
      <animation effect="slide" start="150" end="0" delay="800" time="400" easing="out" tween="cubic">WindowOpen</animation>
      <animation effect="fade" start="100" end="0" time="125" condition="[[Window.IsActive(1) | Window.IsActive(24) | Window.IsActive(25)] + Container(53).Row(3)] + !ControlGroup(7000).HasFocus()">Conditional</animation>
      <animation effect="slide" start="0" end="0" time="0" condition="Window.IsActive(2) | Window.IsActive(501) | Window.IsActive(502)">Conditional</animation>
    </control>
    <!--FLOOR TITLE/DURATION-->
    <control type="group">
      <visible>Control.IsVisible(53) + Skin.HasSetting(newwall)</visible>
      <include>Animation_HideShowcase</include>
      <control type="fadelabel">
        <label>31609</label>
        <label>31610</label>
        <scrollout>false</scrollout>
        <pauseatend>3000</pauseatend>
        <scroll>false</scroll>
        <include>ShowcaseMainLabel</include>
        <visible>Window.IsActive(25) + Control.IsVisible(53) + stringcompare(container(53).numitems,0)</visible>
      </control>
      <control type="fadelabel">
        <label>31609</label>
        <label>31611</label>
        <scrollout>false</scrollout>
        <pauseatend>3000</pauseatend>
        <scroll>false</scroll>
        <include>ShowcaseMainLabel</include>
        <visible>Window.IsActive(502) + Control.IsVisible(53) + stringcompare(container(53).numitems,0)</visible>
      </control>
      <control type="label">
        <label>[UPPERCASE]$INFO[ListItem.Label][/UPPERCASE]</label>
        <include>ShowcaseMainLabel</include>
        <visible>Container.Content(movies) + !Skin.HasSetting(nomediaflags) + !Window.IsActive(24)</visible>
      </control>
      <control type="label">
        <label>[UPPERCASE]$INFO[ListItem.Label][/UPPERCASE]</label>
        <include>ShowcaseMainLabelWide</include>
        <visible>[!Container.Content(movies) | Window.IsActive(24)] | [Container.Content(movies) + Skin.HasSetting(nomediaflags)]</visible>
      </control>
      <control type="label">
        <label>[UPPERCASE]$INFO[Container.NumItems] $LOCALIZE[31005][/UPPERCASE]</label>
        <include>ShowcaseItemsLabel</include>
      </control>
      <control type="label" id="72">
        <label>[UPPERCASE]$INFO[ListItem.Year]  |  $INFO[ListItem.Duration]  |  $INFO[Container(53).ListItem.Rating][/UPPERCASE]</label>
        <!--CHANGED GENRE TO YEAR/DURATION/RATING-->
        <include>ShowcaseDetailLabel</include>
        <visible>Container.Content(movies) + [!IsEmpty(ListItem.Duration) | !IsEmpty(ListItem.Year)]</visible>
        <!--CHANGED GENRE TO YEAR/DURATION/RATING-->
      </control>
      <control type="label" id="72">
        <label>$INFO[ListItem.Album,, -] $INFO[ListItem.Artist]</label>
        <include>ShowcaseDetailLabel</include>
        <visible>Container.Content(songs)</visible>
      </control>
      <control type="label" id="72">
        <info>ListItem.Label2</info>
        <include>ShowcaseDetailLabel</include>
        <visible>Window.IsActive(1) | Container.Content(albums) | Window.IsActive(501)</visible>
      </control>
      <control type="label" id="72">
        <label>[UPPERCASE]$INFO[ListItem.Episode] $LOCALIZE[31406][/UPPERCASE]</label>
        <include>ShowcaseDetailLabel</include>
        <visible>[Container.Content(tvshows)] + !IsEmpty(ListItem.Episode)</visible>
      </control>
      <control type="label" id="72">
        <label>[UPPERCASE]$LOCALIZE[31432] $INFO[ListItem.Season], $LOCALIZE[31433] $INFO[ListItem.Episode][/UPPERCASE]</label>
        <include>ShowcaseDetailLabel</include>
        <visible>Container.Content(episodes) + !IsEmpty(ListItem.Episode)</visible>
      </control>
      <control type="label" id="72">
        <info>ListItem.PictureResolution</info>
        <include>ShowcaseDetailLabel</include>
        <visible>Window.IsActive(2) + !IsEmpty(ListItem.PictureResolution)</visible>
      </control>
    </control>
    <control type="label" id="217">
      <posx>0</posx>
      <posy>0</posy>
      <width>1920</width>
      <height>1080</height>
      <font>Font_List</font>
      <align>center</align>
      <aligny>center</aligny>
      <textcolor>98FFFFFF</textcolor>
      <include condition="Window.IsActive(25)">EmptyLibraryLabelMovies</include>
      <include condition="Window.IsActive(502)">EmptyLibraryLabelMusic</include>
      <include>Animation_CommonFade</include>
      <visible>[Window.IsActive(25) | Window.IsActive(502)] + Control.IsVisible(53) + stringcompare(container(53).numitems,0)</visible>
    </control>
    <control type="group">
      <posx>172</posx>
      <posy>982</posy>
      <visible>Control.IsVisible(53) + !Skin.HasSetting(newwall)</visible>
      <include condition="[[Window.IsActive(24) | Window.IsActive(25) | Window.IsActive(1)] + !Skin.HasSetting(smallmoviewall)] | [[Window.IsActive(2) | Window.IsActive(500) | Window.IsActive(501) | Window.IsActive(502)] + !Skin.HasSetting(smallmusicwall)]">Conditions_WallLeftBig</include>
      <include condition="[[Window.IsActive(24) | Window.IsActive(25) | Window.IsActive(1)] + Skin.HasSetting(smallmoviewall)] | [[Window.IsActive(2) | Window.IsActive(500) | Window.IsActive(501) | Window.IsActive(502)] + Skin.HasSetting(smallmusicwall)]">Conditions_WallLeftSmall</include>
      <animation effect="slide" start="-38,0" end="-38,0" time="0" condition="[Window.IsActive(24) | Window.IsActive(25)] + !Container.Content(episodes)">Conditional</animation>
      <animation effect="slide" start="0,18" end="0,18" time="0" condition="Skin.HasSetting(smallmoviewall) + [Window.IsActive(1) | Window.IsActive(24) | Window.IsActive(25)] + !Container.Content(episodes)">Conditional</animation>
      <control type="label">
        <posy>10</posy>
        <label>$INFO[ListItem.Label]</label>
        <include>Colour_Grey</include>
        <include>WallLabelVars</include>
        <animation effect="slide" start="0,0" end="0,-10" time="200" easing="out" tween="cubic" condition="!IsEmpty(Control.GetLabel(72))">Conditional</animation>
      </control>
      <control type="label" id="72">
        <posy>28</posy>
        <label>$INFO[ListItem.Label2]</label>
        <include>Colour_DarkGrey</include>
        <include>WallLabelVars</include>
        <visible>![Window.IsActive(2) | Window.IsActive(24) | Window.IsActive(25)]</visible>
      </control>
      <control type="label" id="72">
        <posy>28</posy>
        <label>$INFO[ListItem.PictureResolution]</label>
        <include>Colour_DarkGrey</include>
        <include>WallLabelVars</include>
        <visible>Window.IsActive(2)</visible>
      </control>
      <control type="label" id="72">
        <posy>28</posy>
        <label>$INFO[ListItem.Year]</label>
        <include>Colour_DarkGrey</include>
        <include>WallLabelVars</include>
        <visible>Window.IsActive(24) | Window.IsActive(25)</visible>
      </control>
    </control>
    <control type="group">
      <posx>1748</posx>
      <posy>982</posy>
      <visible>Control.IsVisible(53) + !Skin.HasSetting(newwall)</visible>
      <include condition="[[Window.IsActive(24) | Window.IsActive(25) | Window.IsActive(1)] + !Skin.HasSetting(smallmoviewall)] | [[Window.IsActive(2) | Window.IsActive(500) | Window.IsActive(501) | Window.IsActive(502)] + !Skin.HasSetting(smallmusicwall)]">Conditions_WallRightBig</include>
      <include condition="[[Window.IsActive(24) | Window.IsActive(25) | Window.IsActive(1)] + Skin.HasSetting(smallmoviewall)] | [[Window.IsActive(2) | Window.IsActive(500) | Window.IsActive(501) | Window.IsActive(502)] + Skin.HasSetting(smallmusicwall)]">Conditions_WallRightSmall</include>
      <animation effect="slide" start="38,0" end="38,0" time="0" condition="[Window.IsActive(24) | Window.IsActive(25)] + !Container.Content(episodes)">Conditional</animation>
      <animation effect="slide" start="0,18" end="0,18" time="0" condition="Skin.HasSetting(smallmoviewall) + [Window.IsActive(1) | Window.IsActive(24) | Window.IsActive(25)] + !Container.Content(episodes)">Conditional</animation>
      <control type="label">
        <posy>10</posy>
        <align>right</align>
        <label>$INFO[ListItem.Label]</label>
        <include>Colour_Grey</include>
        <include>WallLabelVars</include>
        <animation effect="slide" start="0,0" end="0,-10" time="200" easing="out" tween="cubic" condition="!IsEmpty(Control.GetLabel(72))">Conditional</animation>
      </control>
      <control type="label" id="72">
        <posy>28</posy>
        <align>right</align>
        <label>$INFO[ListItem.Label2]</label>
        <include>Colour_DarkGrey</include>
        <include>WallLabelVars</include>
        <visible>![Window.IsActive(2) | Window.IsActive(24) | Window.IsActive(25)]</visible>
      </control>
      <control type="label" id="72">
        <posy>28</posy>
        <align>right</align>
        <label>$INFO[ListItem.PictureResolution]</label>
        <include>Colour_DarkGrey</include>
        <include>WallLabelVars</include>
        <visible>Window.IsActive(2)</visible>
      </control>
      <control type="label" id="72">
        <posy>28</posy>
        <align>right</align>
        <label>$INFO[ListItem.Year]</label>
        <include>Colour_DarkGrey</include>
        <include>WallLabelVars</include>
        <visible>Window.IsActive(24) | Window.IsActive(25)</visible>
      </control>
    </control>
    <include condition="!Skin.HasSetting(smallmoviewall) + !Skin.HasSetting(wallinfooff)">WallInfoPaneMoviesBig</include>
    <include condition="Skin.HasSetting(smallmoviewall) + !Skin.HasSetting(wallinfooff)">WallInfoPaneMoviesSmall</include>
  </include>
</includes>